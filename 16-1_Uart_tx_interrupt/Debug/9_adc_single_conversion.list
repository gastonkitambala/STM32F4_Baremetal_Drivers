
9_adc_single_conversion.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001960  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000006c  08001b30  08001b30  00002b30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001b9c  08001b9c  0000305c  2**0
                  CONTENTS
  4 .ARM          00000008  08001b9c  08001b9c  00002b9c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08001ba4  08001ba4  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001ba4  08001ba4  00002ba4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001ba8  08001ba8  00002ba8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  08001bac  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000174  2000005c  08001c08  0000305c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001d0  08001c08  000031d0  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 12 .debug_info   000011aa  00000000  00000000  0000308c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000005cf  00000000  00000000  00004236  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000190  00000000  00000000  00004808  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000110  00000000  00000000  00004998  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001a9c2  00000000  00000000  00004aa8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00002252  00000000  00000000  0001f46a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00090df1  00000000  00000000  000216bc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000b24ad  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000d50  00000000  00000000  000b24f0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000078  00000000  00000000  000b3240  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	2000005c 	.word	0x2000005c
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08001b18 	.word	0x08001b18

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000060 	.word	0x20000060
 800020c:	08001b18 	.word	0x08001b18

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <__aeabi_dmul>:
 80002b0:	b570      	push	{r4, r5, r6, lr}
 80002b2:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80002b6:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80002ba:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80002be:	bf1d      	ittte	ne
 80002c0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80002c4:	ea94 0f0c 	teqne	r4, ip
 80002c8:	ea95 0f0c 	teqne	r5, ip
 80002cc:	f000 f8de 	bleq	800048c <__aeabi_dmul+0x1dc>
 80002d0:	442c      	add	r4, r5
 80002d2:	ea81 0603 	eor.w	r6, r1, r3
 80002d6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80002da:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80002de:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80002e2:	bf18      	it	ne
 80002e4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80002e8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80002ec:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80002f0:	d038      	beq.n	8000364 <__aeabi_dmul+0xb4>
 80002f2:	fba0 ce02 	umull	ip, lr, r0, r2
 80002f6:	f04f 0500 	mov.w	r5, #0
 80002fa:	fbe1 e502 	umlal	lr, r5, r1, r2
 80002fe:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 8000302:	fbe0 e503 	umlal	lr, r5, r0, r3
 8000306:	f04f 0600 	mov.w	r6, #0
 800030a:	fbe1 5603 	umlal	r5, r6, r1, r3
 800030e:	f09c 0f00 	teq	ip, #0
 8000312:	bf18      	it	ne
 8000314:	f04e 0e01 	orrne.w	lr, lr, #1
 8000318:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 800031c:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000320:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 8000324:	d204      	bcs.n	8000330 <__aeabi_dmul+0x80>
 8000326:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 800032a:	416d      	adcs	r5, r5
 800032c:	eb46 0606 	adc.w	r6, r6, r6
 8000330:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000334:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000338:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 800033c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000340:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000344:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000348:	bf88      	it	hi
 800034a:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 800034e:	d81e      	bhi.n	800038e <__aeabi_dmul+0xde>
 8000350:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 8000354:	bf08      	it	eq
 8000356:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800035a:	f150 0000 	adcs.w	r0, r0, #0
 800035e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000362:	bd70      	pop	{r4, r5, r6, pc}
 8000364:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000368:	ea46 0101 	orr.w	r1, r6, r1
 800036c:	ea40 0002 	orr.w	r0, r0, r2
 8000370:	ea81 0103 	eor.w	r1, r1, r3
 8000374:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000378:	bfc2      	ittt	gt
 800037a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800037e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000382:	bd70      	popgt	{r4, r5, r6, pc}
 8000384:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000388:	f04f 0e00 	mov.w	lr, #0
 800038c:	3c01      	subs	r4, #1
 800038e:	f300 80ab 	bgt.w	80004e8 <__aeabi_dmul+0x238>
 8000392:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 8000396:	bfde      	ittt	le
 8000398:	2000      	movle	r0, #0
 800039a:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 800039e:	bd70      	pople	{r4, r5, r6, pc}
 80003a0:	f1c4 0400 	rsb	r4, r4, #0
 80003a4:	3c20      	subs	r4, #32
 80003a6:	da35      	bge.n	8000414 <__aeabi_dmul+0x164>
 80003a8:	340c      	adds	r4, #12
 80003aa:	dc1b      	bgt.n	80003e4 <__aeabi_dmul+0x134>
 80003ac:	f104 0414 	add.w	r4, r4, #20
 80003b0:	f1c4 0520 	rsb	r5, r4, #32
 80003b4:	fa00 f305 	lsl.w	r3, r0, r5
 80003b8:	fa20 f004 	lsr.w	r0, r0, r4
 80003bc:	fa01 f205 	lsl.w	r2, r1, r5
 80003c0:	ea40 0002 	orr.w	r0, r0, r2
 80003c4:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 80003c8:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80003cc:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80003d0:	fa21 f604 	lsr.w	r6, r1, r4
 80003d4:	eb42 0106 	adc.w	r1, r2, r6
 80003d8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80003dc:	bf08      	it	eq
 80003de:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80003e2:	bd70      	pop	{r4, r5, r6, pc}
 80003e4:	f1c4 040c 	rsb	r4, r4, #12
 80003e8:	f1c4 0520 	rsb	r5, r4, #32
 80003ec:	fa00 f304 	lsl.w	r3, r0, r4
 80003f0:	fa20 f005 	lsr.w	r0, r0, r5
 80003f4:	fa01 f204 	lsl.w	r2, r1, r4
 80003f8:	ea40 0002 	orr.w	r0, r0, r2
 80003fc:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000400:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000404:	f141 0100 	adc.w	r1, r1, #0
 8000408:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800040c:	bf08      	it	eq
 800040e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000412:	bd70      	pop	{r4, r5, r6, pc}
 8000414:	f1c4 0520 	rsb	r5, r4, #32
 8000418:	fa00 f205 	lsl.w	r2, r0, r5
 800041c:	ea4e 0e02 	orr.w	lr, lr, r2
 8000420:	fa20 f304 	lsr.w	r3, r0, r4
 8000424:	fa01 f205 	lsl.w	r2, r1, r5
 8000428:	ea43 0302 	orr.w	r3, r3, r2
 800042c:	fa21 f004 	lsr.w	r0, r1, r4
 8000430:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000434:	fa21 f204 	lsr.w	r2, r1, r4
 8000438:	ea20 0002 	bic.w	r0, r0, r2
 800043c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000440:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000444:	bf08      	it	eq
 8000446:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800044a:	bd70      	pop	{r4, r5, r6, pc}
 800044c:	f094 0f00 	teq	r4, #0
 8000450:	d10f      	bne.n	8000472 <__aeabi_dmul+0x1c2>
 8000452:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 8000456:	0040      	lsls	r0, r0, #1
 8000458:	eb41 0101 	adc.w	r1, r1, r1
 800045c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000460:	bf08      	it	eq
 8000462:	3c01      	subeq	r4, #1
 8000464:	d0f7      	beq.n	8000456 <__aeabi_dmul+0x1a6>
 8000466:	ea41 0106 	orr.w	r1, r1, r6
 800046a:	f095 0f00 	teq	r5, #0
 800046e:	bf18      	it	ne
 8000470:	4770      	bxne	lr
 8000472:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 8000476:	0052      	lsls	r2, r2, #1
 8000478:	eb43 0303 	adc.w	r3, r3, r3
 800047c:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000480:	bf08      	it	eq
 8000482:	3d01      	subeq	r5, #1
 8000484:	d0f7      	beq.n	8000476 <__aeabi_dmul+0x1c6>
 8000486:	ea43 0306 	orr.w	r3, r3, r6
 800048a:	4770      	bx	lr
 800048c:	ea94 0f0c 	teq	r4, ip
 8000490:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000494:	bf18      	it	ne
 8000496:	ea95 0f0c 	teqne	r5, ip
 800049a:	d00c      	beq.n	80004b6 <__aeabi_dmul+0x206>
 800049c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80004a0:	bf18      	it	ne
 80004a2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80004a6:	d1d1      	bne.n	800044c <__aeabi_dmul+0x19c>
 80004a8:	ea81 0103 	eor.w	r1, r1, r3
 80004ac:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80004b0:	f04f 0000 	mov.w	r0, #0
 80004b4:	bd70      	pop	{r4, r5, r6, pc}
 80004b6:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80004ba:	bf06      	itte	eq
 80004bc:	4610      	moveq	r0, r2
 80004be:	4619      	moveq	r1, r3
 80004c0:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80004c4:	d019      	beq.n	80004fa <__aeabi_dmul+0x24a>
 80004c6:	ea94 0f0c 	teq	r4, ip
 80004ca:	d102      	bne.n	80004d2 <__aeabi_dmul+0x222>
 80004cc:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80004d0:	d113      	bne.n	80004fa <__aeabi_dmul+0x24a>
 80004d2:	ea95 0f0c 	teq	r5, ip
 80004d6:	d105      	bne.n	80004e4 <__aeabi_dmul+0x234>
 80004d8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80004dc:	bf1c      	itt	ne
 80004de:	4610      	movne	r0, r2
 80004e0:	4619      	movne	r1, r3
 80004e2:	d10a      	bne.n	80004fa <__aeabi_dmul+0x24a>
 80004e4:	ea81 0103 	eor.w	r1, r1, r3
 80004e8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80004ec:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80004f0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004f4:	f04f 0000 	mov.w	r0, #0
 80004f8:	bd70      	pop	{r4, r5, r6, pc}
 80004fa:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80004fe:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 8000502:	bd70      	pop	{r4, r5, r6, pc}

08000504 <__aeabi_drsub>:
 8000504:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000508:	e002      	b.n	8000510 <__adddf3>
 800050a:	bf00      	nop

0800050c <__aeabi_dsub>:
 800050c:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

08000510 <__adddf3>:
 8000510:	b530      	push	{r4, r5, lr}
 8000512:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000516:	ea4f 0543 	mov.w	r5, r3, lsl #1
 800051a:	ea94 0f05 	teq	r4, r5
 800051e:	bf08      	it	eq
 8000520:	ea90 0f02 	teqeq	r0, r2
 8000524:	bf1f      	itttt	ne
 8000526:	ea54 0c00 	orrsne.w	ip, r4, r0
 800052a:	ea55 0c02 	orrsne.w	ip, r5, r2
 800052e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000532:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000536:	f000 80e2 	beq.w	80006fe <__adddf3+0x1ee>
 800053a:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800053e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000542:	bfb8      	it	lt
 8000544:	426d      	neglt	r5, r5
 8000546:	dd0c      	ble.n	8000562 <__adddf3+0x52>
 8000548:	442c      	add	r4, r5
 800054a:	ea80 0202 	eor.w	r2, r0, r2
 800054e:	ea81 0303 	eor.w	r3, r1, r3
 8000552:	ea82 0000 	eor.w	r0, r2, r0
 8000556:	ea83 0101 	eor.w	r1, r3, r1
 800055a:	ea80 0202 	eor.w	r2, r0, r2
 800055e:	ea81 0303 	eor.w	r3, r1, r3
 8000562:	2d36      	cmp	r5, #54	@ 0x36
 8000564:	bf88      	it	hi
 8000566:	bd30      	pophi	{r4, r5, pc}
 8000568:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 800056c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000570:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000574:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000578:	d002      	beq.n	8000580 <__adddf3+0x70>
 800057a:	4240      	negs	r0, r0
 800057c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000580:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000584:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000588:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800058c:	d002      	beq.n	8000594 <__adddf3+0x84>
 800058e:	4252      	negs	r2, r2
 8000590:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000594:	ea94 0f05 	teq	r4, r5
 8000598:	f000 80a7 	beq.w	80006ea <__adddf3+0x1da>
 800059c:	f1a4 0401 	sub.w	r4, r4, #1
 80005a0:	f1d5 0e20 	rsbs	lr, r5, #32
 80005a4:	db0d      	blt.n	80005c2 <__adddf3+0xb2>
 80005a6:	fa02 fc0e 	lsl.w	ip, r2, lr
 80005aa:	fa22 f205 	lsr.w	r2, r2, r5
 80005ae:	1880      	adds	r0, r0, r2
 80005b0:	f141 0100 	adc.w	r1, r1, #0
 80005b4:	fa03 f20e 	lsl.w	r2, r3, lr
 80005b8:	1880      	adds	r0, r0, r2
 80005ba:	fa43 f305 	asr.w	r3, r3, r5
 80005be:	4159      	adcs	r1, r3
 80005c0:	e00e      	b.n	80005e0 <__adddf3+0xd0>
 80005c2:	f1a5 0520 	sub.w	r5, r5, #32
 80005c6:	f10e 0e20 	add.w	lr, lr, #32
 80005ca:	2a01      	cmp	r2, #1
 80005cc:	fa03 fc0e 	lsl.w	ip, r3, lr
 80005d0:	bf28      	it	cs
 80005d2:	f04c 0c02 	orrcs.w	ip, ip, #2
 80005d6:	fa43 f305 	asr.w	r3, r3, r5
 80005da:	18c0      	adds	r0, r0, r3
 80005dc:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80005e0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005e4:	d507      	bpl.n	80005f6 <__adddf3+0xe6>
 80005e6:	f04f 0e00 	mov.w	lr, #0
 80005ea:	f1dc 0c00 	rsbs	ip, ip, #0
 80005ee:	eb7e 0000 	sbcs.w	r0, lr, r0
 80005f2:	eb6e 0101 	sbc.w	r1, lr, r1
 80005f6:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80005fa:	d31b      	bcc.n	8000634 <__adddf3+0x124>
 80005fc:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 8000600:	d30c      	bcc.n	800061c <__adddf3+0x10c>
 8000602:	0849      	lsrs	r1, r1, #1
 8000604:	ea5f 0030 	movs.w	r0, r0, rrx
 8000608:	ea4f 0c3c 	mov.w	ip, ip, rrx
 800060c:	f104 0401 	add.w	r4, r4, #1
 8000610:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000614:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000618:	f080 809a 	bcs.w	8000750 <__adddf3+0x240>
 800061c:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000620:	bf08      	it	eq
 8000622:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000626:	f150 0000 	adcs.w	r0, r0, #0
 800062a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800062e:	ea41 0105 	orr.w	r1, r1, r5
 8000632:	bd30      	pop	{r4, r5, pc}
 8000634:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000638:	4140      	adcs	r0, r0
 800063a:	eb41 0101 	adc.w	r1, r1, r1
 800063e:	3c01      	subs	r4, #1
 8000640:	bf28      	it	cs
 8000642:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 8000646:	d2e9      	bcs.n	800061c <__adddf3+0x10c>
 8000648:	f091 0f00 	teq	r1, #0
 800064c:	bf04      	itt	eq
 800064e:	4601      	moveq	r1, r0
 8000650:	2000      	moveq	r0, #0
 8000652:	fab1 f381 	clz	r3, r1
 8000656:	bf08      	it	eq
 8000658:	3320      	addeq	r3, #32
 800065a:	f1a3 030b 	sub.w	r3, r3, #11
 800065e:	f1b3 0220 	subs.w	r2, r3, #32
 8000662:	da0c      	bge.n	800067e <__adddf3+0x16e>
 8000664:	320c      	adds	r2, #12
 8000666:	dd08      	ble.n	800067a <__adddf3+0x16a>
 8000668:	f102 0c14 	add.w	ip, r2, #20
 800066c:	f1c2 020c 	rsb	r2, r2, #12
 8000670:	fa01 f00c 	lsl.w	r0, r1, ip
 8000674:	fa21 f102 	lsr.w	r1, r1, r2
 8000678:	e00c      	b.n	8000694 <__adddf3+0x184>
 800067a:	f102 0214 	add.w	r2, r2, #20
 800067e:	bfd8      	it	le
 8000680:	f1c2 0c20 	rsble	ip, r2, #32
 8000684:	fa01 f102 	lsl.w	r1, r1, r2
 8000688:	fa20 fc0c 	lsr.w	ip, r0, ip
 800068c:	bfdc      	itt	le
 800068e:	ea41 010c 	orrle.w	r1, r1, ip
 8000692:	4090      	lslle	r0, r2
 8000694:	1ae4      	subs	r4, r4, r3
 8000696:	bfa2      	ittt	ge
 8000698:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800069c:	4329      	orrge	r1, r5
 800069e:	bd30      	popge	{r4, r5, pc}
 80006a0:	ea6f 0404 	mvn.w	r4, r4
 80006a4:	3c1f      	subs	r4, #31
 80006a6:	da1c      	bge.n	80006e2 <__adddf3+0x1d2>
 80006a8:	340c      	adds	r4, #12
 80006aa:	dc0e      	bgt.n	80006ca <__adddf3+0x1ba>
 80006ac:	f104 0414 	add.w	r4, r4, #20
 80006b0:	f1c4 0220 	rsb	r2, r4, #32
 80006b4:	fa20 f004 	lsr.w	r0, r0, r4
 80006b8:	fa01 f302 	lsl.w	r3, r1, r2
 80006bc:	ea40 0003 	orr.w	r0, r0, r3
 80006c0:	fa21 f304 	lsr.w	r3, r1, r4
 80006c4:	ea45 0103 	orr.w	r1, r5, r3
 80006c8:	bd30      	pop	{r4, r5, pc}
 80006ca:	f1c4 040c 	rsb	r4, r4, #12
 80006ce:	f1c4 0220 	rsb	r2, r4, #32
 80006d2:	fa20 f002 	lsr.w	r0, r0, r2
 80006d6:	fa01 f304 	lsl.w	r3, r1, r4
 80006da:	ea40 0003 	orr.w	r0, r0, r3
 80006de:	4629      	mov	r1, r5
 80006e0:	bd30      	pop	{r4, r5, pc}
 80006e2:	fa21 f004 	lsr.w	r0, r1, r4
 80006e6:	4629      	mov	r1, r5
 80006e8:	bd30      	pop	{r4, r5, pc}
 80006ea:	f094 0f00 	teq	r4, #0
 80006ee:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80006f2:	bf06      	itte	eq
 80006f4:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80006f8:	3401      	addeq	r4, #1
 80006fa:	3d01      	subne	r5, #1
 80006fc:	e74e      	b.n	800059c <__adddf3+0x8c>
 80006fe:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000702:	bf18      	it	ne
 8000704:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000708:	d029      	beq.n	800075e <__adddf3+0x24e>
 800070a:	ea94 0f05 	teq	r4, r5
 800070e:	bf08      	it	eq
 8000710:	ea90 0f02 	teqeq	r0, r2
 8000714:	d005      	beq.n	8000722 <__adddf3+0x212>
 8000716:	ea54 0c00 	orrs.w	ip, r4, r0
 800071a:	bf04      	itt	eq
 800071c:	4619      	moveq	r1, r3
 800071e:	4610      	moveq	r0, r2
 8000720:	bd30      	pop	{r4, r5, pc}
 8000722:	ea91 0f03 	teq	r1, r3
 8000726:	bf1e      	ittt	ne
 8000728:	2100      	movne	r1, #0
 800072a:	2000      	movne	r0, #0
 800072c:	bd30      	popne	{r4, r5, pc}
 800072e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000732:	d105      	bne.n	8000740 <__adddf3+0x230>
 8000734:	0040      	lsls	r0, r0, #1
 8000736:	4149      	adcs	r1, r1
 8000738:	bf28      	it	cs
 800073a:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 800073e:	bd30      	pop	{r4, r5, pc}
 8000740:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000744:	bf3c      	itt	cc
 8000746:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 800074a:	bd30      	popcc	{r4, r5, pc}
 800074c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000750:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000754:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000758:	f04f 0000 	mov.w	r0, #0
 800075c:	bd30      	pop	{r4, r5, pc}
 800075e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000762:	bf1a      	itte	ne
 8000764:	4619      	movne	r1, r3
 8000766:	4610      	movne	r0, r2
 8000768:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 800076c:	bf1c      	itt	ne
 800076e:	460b      	movne	r3, r1
 8000770:	4602      	movne	r2, r0
 8000772:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000776:	bf06      	itte	eq
 8000778:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800077c:	ea91 0f03 	teqeq	r1, r3
 8000780:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000784:	bd30      	pop	{r4, r5, pc}
 8000786:	bf00      	nop

08000788 <__aeabi_ui2d>:
 8000788:	f090 0f00 	teq	r0, #0
 800078c:	bf04      	itt	eq
 800078e:	2100      	moveq	r1, #0
 8000790:	4770      	bxeq	lr
 8000792:	b530      	push	{r4, r5, lr}
 8000794:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000798:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800079c:	f04f 0500 	mov.w	r5, #0
 80007a0:	f04f 0100 	mov.w	r1, #0
 80007a4:	e750      	b.n	8000648 <__adddf3+0x138>
 80007a6:	bf00      	nop

080007a8 <__aeabi_i2d>:
 80007a8:	f090 0f00 	teq	r0, #0
 80007ac:	bf04      	itt	eq
 80007ae:	2100      	moveq	r1, #0
 80007b0:	4770      	bxeq	lr
 80007b2:	b530      	push	{r4, r5, lr}
 80007b4:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80007b8:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80007bc:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 80007c0:	bf48      	it	mi
 80007c2:	4240      	negmi	r0, r0
 80007c4:	f04f 0100 	mov.w	r1, #0
 80007c8:	e73e      	b.n	8000648 <__adddf3+0x138>
 80007ca:	bf00      	nop

080007cc <__aeabi_f2d>:
 80007cc:	0042      	lsls	r2, r0, #1
 80007ce:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80007d2:	ea4f 0131 	mov.w	r1, r1, rrx
 80007d6:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80007da:	bf1f      	itttt	ne
 80007dc:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 80007e0:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80007e4:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80007e8:	4770      	bxne	lr
 80007ea:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80007ee:	bf08      	it	eq
 80007f0:	4770      	bxeq	lr
 80007f2:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80007f6:	bf04      	itt	eq
 80007f8:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80007fc:	4770      	bxeq	lr
 80007fe:	b530      	push	{r4, r5, lr}
 8000800:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000804:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000808:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 800080c:	e71c      	b.n	8000648 <__adddf3+0x138>
 800080e:	bf00      	nop

08000810 <__aeabi_ul2d>:
 8000810:	ea50 0201 	orrs.w	r2, r0, r1
 8000814:	bf08      	it	eq
 8000816:	4770      	bxeq	lr
 8000818:	b530      	push	{r4, r5, lr}
 800081a:	f04f 0500 	mov.w	r5, #0
 800081e:	e00a      	b.n	8000836 <__aeabi_l2d+0x16>

08000820 <__aeabi_l2d>:
 8000820:	ea50 0201 	orrs.w	r2, r0, r1
 8000824:	bf08      	it	eq
 8000826:	4770      	bxeq	lr
 8000828:	b530      	push	{r4, r5, lr}
 800082a:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 800082e:	d502      	bpl.n	8000836 <__aeabi_l2d+0x16>
 8000830:	4240      	negs	r0, r0
 8000832:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000836:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 800083a:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800083e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000842:	f43f aed8 	beq.w	80005f6 <__adddf3+0xe6>
 8000846:	f04f 0203 	mov.w	r2, #3
 800084a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800084e:	bf18      	it	ne
 8000850:	3203      	addne	r2, #3
 8000852:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000856:	bf18      	it	ne
 8000858:	3203      	addne	r2, #3
 800085a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800085e:	f1c2 0320 	rsb	r3, r2, #32
 8000862:	fa00 fc03 	lsl.w	ip, r0, r3
 8000866:	fa20 f002 	lsr.w	r0, r0, r2
 800086a:	fa01 fe03 	lsl.w	lr, r1, r3
 800086e:	ea40 000e 	orr.w	r0, r0, lr
 8000872:	fa21 f102 	lsr.w	r1, r1, r2
 8000876:	4414      	add	r4, r2
 8000878:	e6bd      	b.n	80005f6 <__adddf3+0xe6>
 800087a:	bf00      	nop

0800087c <__aeabi_d2iz>:
 800087c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000880:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000884:	d215      	bcs.n	80008b2 <__aeabi_d2iz+0x36>
 8000886:	d511      	bpl.n	80008ac <__aeabi_d2iz+0x30>
 8000888:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 800088c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000890:	d912      	bls.n	80008b8 <__aeabi_d2iz+0x3c>
 8000892:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000896:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 800089a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 800089e:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80008a2:	fa23 f002 	lsr.w	r0, r3, r2
 80008a6:	bf18      	it	ne
 80008a8:	4240      	negne	r0, r0
 80008aa:	4770      	bx	lr
 80008ac:	f04f 0000 	mov.w	r0, #0
 80008b0:	4770      	bx	lr
 80008b2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 80008b6:	d105      	bne.n	80008c4 <__aeabi_d2iz+0x48>
 80008b8:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 80008bc:	bf08      	it	eq
 80008be:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 80008c2:	4770      	bx	lr
 80008c4:	f04f 0000 	mov.w	r0, #0
 80008c8:	4770      	bx	lr
 80008ca:	bf00      	nop

080008cc <pa1_adc_init>:
 * third = ch3
 * */


void pa1_adc_init(void)
{
 80008cc:	b480      	push	{r7}
 80008ce:	af00      	add	r7, sp, #0
	/****** CONFIGURE THE ADC GPIIO PIN ******/
	//Enable access to GPIOA
	RCC->AHB1ENR |= GPIOAEN;
 80008d0:	4b14      	ldr	r3, [pc, #80]	@ (8000924 <pa1_adc_init+0x58>)
 80008d2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80008d4:	4a13      	ldr	r2, [pc, #76]	@ (8000924 <pa1_adc_init+0x58>)
 80008d6:	f043 0301 	orr.w	r3, r3, #1
 80008da:	6313      	str	r3, [r2, #48]	@ 0x30
	//Set the mode of PA1 to analog mode
	GPIOA->MODER |= (1<<2);
 80008dc:	4b12      	ldr	r3, [pc, #72]	@ (8000928 <pa1_adc_init+0x5c>)
 80008de:	681b      	ldr	r3, [r3, #0]
 80008e0:	4a11      	ldr	r2, [pc, #68]	@ (8000928 <pa1_adc_init+0x5c>)
 80008e2:	f043 0304 	orr.w	r3, r3, #4
 80008e6:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (1<<3);
 80008e8:	4b0f      	ldr	r3, [pc, #60]	@ (8000928 <pa1_adc_init+0x5c>)
 80008ea:	681b      	ldr	r3, [r3, #0]
 80008ec:	4a0e      	ldr	r2, [pc, #56]	@ (8000928 <pa1_adc_init+0x5c>)
 80008ee:	f043 0308 	orr.w	r3, r3, #8
 80008f2:	6013      	str	r3, [r2, #0]
	/* Configure the ADC MODULE */

	// Enable clock access to ADC
	RCC->APB2ENR |= ADC1EN;
 80008f4:	4b0b      	ldr	r3, [pc, #44]	@ (8000924 <pa1_adc_init+0x58>)
 80008f6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80008f8:	4a0a      	ldr	r2, [pc, #40]	@ (8000924 <pa1_adc_init+0x58>)
 80008fa:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80008fe:	6453      	str	r3, [r2, #68]	@ 0x44

	/*Configure adc parameters*/
	//Conversion sequence start
	ADC1->SQR3 = ADC_CH1;
 8000900:	4b0a      	ldr	r3, [pc, #40]	@ (800092c <pa1_adc_init+0x60>)
 8000902:	2201      	movs	r2, #1
 8000904:	635a      	str	r2, [r3, #52]	@ 0x34
	//Conversion sequence length
	ADC1->SQR1 = ADC_SEQ_LEN1;
 8000906:	4b09      	ldr	r3, [pc, #36]	@ (800092c <pa1_adc_init+0x60>)
 8000908:	2200      	movs	r2, #0
 800090a:	62da      	str	r2, [r3, #44]	@ 0x2c
	/* Enable ADC module */
	ADC1->CR2 |= CR2_ADON;
 800090c:	4b07      	ldr	r3, [pc, #28]	@ (800092c <pa1_adc_init+0x60>)
 800090e:	689b      	ldr	r3, [r3, #8]
 8000910:	4a06      	ldr	r2, [pc, #24]	@ (800092c <pa1_adc_init+0x60>)
 8000912:	f043 0301 	orr.w	r3, r3, #1
 8000916:	6093      	str	r3, [r2, #8]
}
 8000918:	bf00      	nop
 800091a:	46bd      	mov	sp, r7
 800091c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000920:	4770      	bx	lr
 8000922:	bf00      	nop
 8000924:	40023800 	.word	0x40023800
 8000928:	40020000 	.word	0x40020000
 800092c:	40012000 	.word	0x40012000

08000930 <start_conversion>:

void start_conversion(void)
{
 8000930:	b480      	push	{r7}
 8000932:	af00      	add	r7, sp, #0
	//Start adc conversion
	ADC1->CR2 |= CR2_SWSTART;
 8000934:	4b05      	ldr	r3, [pc, #20]	@ (800094c <start_conversion+0x1c>)
 8000936:	689b      	ldr	r3, [r3, #8]
 8000938:	4a04      	ldr	r2, [pc, #16]	@ (800094c <start_conversion+0x1c>)
 800093a:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 800093e:	6093      	str	r3, [r2, #8]
}
 8000940:	bf00      	nop
 8000942:	46bd      	mov	sp, r7
 8000944:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000948:	4770      	bx	lr
 800094a:	bf00      	nop
 800094c:	40012000 	.word	0x40012000

08000950 <adc_read>:

uint32_t adc_read(void)
{
 8000950:	b480      	push	{r7}
 8000952:	af00      	add	r7, sp, #0
	//Wait for conversion to be complete
	while(!(ADC1->SR & SR_EOC)){}
 8000954:	bf00      	nop
 8000956:	4b06      	ldr	r3, [pc, #24]	@ (8000970 <adc_read+0x20>)
 8000958:	681b      	ldr	r3, [r3, #0]
 800095a:	f003 0302 	and.w	r3, r3, #2
 800095e:	2b00      	cmp	r3, #0
 8000960:	d0f9      	beq.n	8000956 <adc_read+0x6>
	//Read converted result
	return ADC1->DR;
 8000962:	4b03      	ldr	r3, [pc, #12]	@ (8000970 <adc_read+0x20>)
 8000964:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
}
 8000966:	4618      	mov	r0, r3
 8000968:	46bd      	mov	sp, r7
 800096a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800096e:	4770      	bx	lr
 8000970:	40012000 	.word	0x40012000
 8000974:	00000000 	.word	0x00000000

08000978 <main>:

uint32_t sensor_value;
int voltage;

int main(void)
{
 8000978:	b580      	push	{r7, lr}
 800097a:	af00      	add	r7, sp, #0

	uart2_tx_init();
 800097c:	f000 f8e8 	bl	8000b50 <uart2_tx_init>
	pa1_adc_init();
 8000980:	f7ff ffa4 	bl	80008cc <pa1_adc_init>

	while(1)
	{
		start_conversion();
 8000984:	f7ff ffd4 	bl	8000930 <start_conversion>
		sensor_value = adc_read();
 8000988:	f7ff ffe2 	bl	8000950 <adc_read>
 800098c:	4603      	mov	r3, r0
 800098e:	4a14      	ldr	r2, [pc, #80]	@ (80009e0 <main+0x68>)
 8000990:	6013      	str	r3, [r2, #0]
		voltage = sensor_value *(3.3 / 4095);
 8000992:	4b13      	ldr	r3, [pc, #76]	@ (80009e0 <main+0x68>)
 8000994:	681b      	ldr	r3, [r3, #0]
 8000996:	4618      	mov	r0, r3
 8000998:	f7ff fef6 	bl	8000788 <__aeabi_ui2d>
 800099c:	a30e      	add	r3, pc, #56	@ (adr r3, 80009d8 <main+0x60>)
 800099e:	e9d3 2300 	ldrd	r2, r3, [r3]
 80009a2:	f7ff fc85 	bl	80002b0 <__aeabi_dmul>
 80009a6:	4602      	mov	r2, r0
 80009a8:	460b      	mov	r3, r1
 80009aa:	4610      	mov	r0, r2
 80009ac:	4619      	mov	r1, r3
 80009ae:	f7ff ff65 	bl	800087c <__aeabi_d2iz>
 80009b2:	4603      	mov	r3, r0
 80009b4:	4a0b      	ldr	r2, [pc, #44]	@ (80009e4 <main+0x6c>)
 80009b6:	6013      	str	r3, [r2, #0]
		printf("Analog Sensor value : %d \n\r", (int)sensor_value);
 80009b8:	4b09      	ldr	r3, [pc, #36]	@ (80009e0 <main+0x68>)
 80009ba:	681b      	ldr	r3, [r3, #0]
 80009bc:	4619      	mov	r1, r3
 80009be:	480a      	ldr	r0, [pc, #40]	@ (80009e8 <main+0x70>)
 80009c0:	f000 fa3c 	bl	8000e3c <iprintf>
		printf("Digital sensor value : %d \n\r", voltage);
 80009c4:	4b07      	ldr	r3, [pc, #28]	@ (80009e4 <main+0x6c>)
 80009c6:	681b      	ldr	r3, [r3, #0]
 80009c8:	4619      	mov	r1, r3
 80009ca:	4808      	ldr	r0, [pc, #32]	@ (80009ec <main+0x74>)
 80009cc:	f000 fa36 	bl	8000e3c <iprintf>
		start_conversion();
 80009d0:	bf00      	nop
 80009d2:	e7d7      	b.n	8000984 <main+0xc>
 80009d4:	f3af 8000 	nop.w
 80009d8:	e734d9b4 	.word	0xe734d9b4
 80009dc:	3f4a680c 	.word	0x3f4a680c
 80009e0:	20000078 	.word	0x20000078
 80009e4:	2000007c 	.word	0x2000007c
 80009e8:	08001b30 	.word	0x08001b30
 80009ec:	08001b4c 	.word	0x08001b4c

080009f0 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80009f0:	b580      	push	{r7, lr}
 80009f2:	b086      	sub	sp, #24
 80009f4:	af00      	add	r7, sp, #0
 80009f6:	60f8      	str	r0, [r7, #12]
 80009f8:	60b9      	str	r1, [r7, #8]
 80009fa:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80009fc:	2300      	movs	r3, #0
 80009fe:	617b      	str	r3, [r7, #20]
 8000a00:	e00a      	b.n	8000a18 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000a02:	f3af 8000 	nop.w
 8000a06:	4601      	mov	r1, r0
 8000a08:	68bb      	ldr	r3, [r7, #8]
 8000a0a:	1c5a      	adds	r2, r3, #1
 8000a0c:	60ba      	str	r2, [r7, #8]
 8000a0e:	b2ca      	uxtb	r2, r1
 8000a10:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000a12:	697b      	ldr	r3, [r7, #20]
 8000a14:	3301      	adds	r3, #1
 8000a16:	617b      	str	r3, [r7, #20]
 8000a18:	697a      	ldr	r2, [r7, #20]
 8000a1a:	687b      	ldr	r3, [r7, #4]
 8000a1c:	429a      	cmp	r2, r3
 8000a1e:	dbf0      	blt.n	8000a02 <_read+0x12>
  }

  return len;
 8000a20:	687b      	ldr	r3, [r7, #4]
}
 8000a22:	4618      	mov	r0, r3
 8000a24:	3718      	adds	r7, #24
 8000a26:	46bd      	mov	sp, r7
 8000a28:	bd80      	pop	{r7, pc}

08000a2a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000a2a:	b580      	push	{r7, lr}
 8000a2c:	b086      	sub	sp, #24
 8000a2e:	af00      	add	r7, sp, #0
 8000a30:	60f8      	str	r0, [r7, #12]
 8000a32:	60b9      	str	r1, [r7, #8]
 8000a34:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000a36:	2300      	movs	r3, #0
 8000a38:	617b      	str	r3, [r7, #20]
 8000a3a:	e009      	b.n	8000a50 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000a3c:	68bb      	ldr	r3, [r7, #8]
 8000a3e:	1c5a      	adds	r2, r3, #1
 8000a40:	60ba      	str	r2, [r7, #8]
 8000a42:	781b      	ldrb	r3, [r3, #0]
 8000a44:	4618      	mov	r0, r3
 8000a46:	f000 f877 	bl	8000b38 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000a4a:	697b      	ldr	r3, [r7, #20]
 8000a4c:	3301      	adds	r3, #1
 8000a4e:	617b      	str	r3, [r7, #20]
 8000a50:	697a      	ldr	r2, [r7, #20]
 8000a52:	687b      	ldr	r3, [r7, #4]
 8000a54:	429a      	cmp	r2, r3
 8000a56:	dbf1      	blt.n	8000a3c <_write+0x12>
  }
  return len;
 8000a58:	687b      	ldr	r3, [r7, #4]
}
 8000a5a:	4618      	mov	r0, r3
 8000a5c:	3718      	adds	r7, #24
 8000a5e:	46bd      	mov	sp, r7
 8000a60:	bd80      	pop	{r7, pc}

08000a62 <_close>:

int _close(int file)
{
 8000a62:	b480      	push	{r7}
 8000a64:	b083      	sub	sp, #12
 8000a66:	af00      	add	r7, sp, #0
 8000a68:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000a6a:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000a6e:	4618      	mov	r0, r3
 8000a70:	370c      	adds	r7, #12
 8000a72:	46bd      	mov	sp, r7
 8000a74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a78:	4770      	bx	lr

08000a7a <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000a7a:	b480      	push	{r7}
 8000a7c:	b083      	sub	sp, #12
 8000a7e:	af00      	add	r7, sp, #0
 8000a80:	6078      	str	r0, [r7, #4]
 8000a82:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000a84:	683b      	ldr	r3, [r7, #0]
 8000a86:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8000a8a:	605a      	str	r2, [r3, #4]
  return 0;
 8000a8c:	2300      	movs	r3, #0
}
 8000a8e:	4618      	mov	r0, r3
 8000a90:	370c      	adds	r7, #12
 8000a92:	46bd      	mov	sp, r7
 8000a94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a98:	4770      	bx	lr

08000a9a <_isatty>:

int _isatty(int file)
{
 8000a9a:	b480      	push	{r7}
 8000a9c:	b083      	sub	sp, #12
 8000a9e:	af00      	add	r7, sp, #0
 8000aa0:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000aa2:	2301      	movs	r3, #1
}
 8000aa4:	4618      	mov	r0, r3
 8000aa6:	370c      	adds	r7, #12
 8000aa8:	46bd      	mov	sp, r7
 8000aaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000aae:	4770      	bx	lr

08000ab0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000ab0:	b480      	push	{r7}
 8000ab2:	b085      	sub	sp, #20
 8000ab4:	af00      	add	r7, sp, #0
 8000ab6:	60f8      	str	r0, [r7, #12]
 8000ab8:	60b9      	str	r1, [r7, #8]
 8000aba:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000abc:	2300      	movs	r3, #0
}
 8000abe:	4618      	mov	r0, r3
 8000ac0:	3714      	adds	r7, #20
 8000ac2:	46bd      	mov	sp, r7
 8000ac4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ac8:	4770      	bx	lr
	...

08000acc <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000acc:	b580      	push	{r7, lr}
 8000ace:	b086      	sub	sp, #24
 8000ad0:	af00      	add	r7, sp, #0
 8000ad2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000ad4:	4a14      	ldr	r2, [pc, #80]	@ (8000b28 <_sbrk+0x5c>)
 8000ad6:	4b15      	ldr	r3, [pc, #84]	@ (8000b2c <_sbrk+0x60>)
 8000ad8:	1ad3      	subs	r3, r2, r3
 8000ada:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000adc:	697b      	ldr	r3, [r7, #20]
 8000ade:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000ae0:	4b13      	ldr	r3, [pc, #76]	@ (8000b30 <_sbrk+0x64>)
 8000ae2:	681b      	ldr	r3, [r3, #0]
 8000ae4:	2b00      	cmp	r3, #0
 8000ae6:	d102      	bne.n	8000aee <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000ae8:	4b11      	ldr	r3, [pc, #68]	@ (8000b30 <_sbrk+0x64>)
 8000aea:	4a12      	ldr	r2, [pc, #72]	@ (8000b34 <_sbrk+0x68>)
 8000aec:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000aee:	4b10      	ldr	r3, [pc, #64]	@ (8000b30 <_sbrk+0x64>)
 8000af0:	681a      	ldr	r2, [r3, #0]
 8000af2:	687b      	ldr	r3, [r7, #4]
 8000af4:	4413      	add	r3, r2
 8000af6:	693a      	ldr	r2, [r7, #16]
 8000af8:	429a      	cmp	r2, r3
 8000afa:	d207      	bcs.n	8000b0c <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000afc:	f000 fa42 	bl	8000f84 <__errno>
 8000b00:	4603      	mov	r3, r0
 8000b02:	220c      	movs	r2, #12
 8000b04:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000b06:	f04f 33ff 	mov.w	r3, #4294967295
 8000b0a:	e009      	b.n	8000b20 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000b0c:	4b08      	ldr	r3, [pc, #32]	@ (8000b30 <_sbrk+0x64>)
 8000b0e:	681b      	ldr	r3, [r3, #0]
 8000b10:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000b12:	4b07      	ldr	r3, [pc, #28]	@ (8000b30 <_sbrk+0x64>)
 8000b14:	681a      	ldr	r2, [r3, #0]
 8000b16:	687b      	ldr	r3, [r7, #4]
 8000b18:	4413      	add	r3, r2
 8000b1a:	4a05      	ldr	r2, [pc, #20]	@ (8000b30 <_sbrk+0x64>)
 8000b1c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000b1e:	68fb      	ldr	r3, [r7, #12]
}
 8000b20:	4618      	mov	r0, r3
 8000b22:	3718      	adds	r7, #24
 8000b24:	46bd      	mov	sp, r7
 8000b26:	bd80      	pop	{r7, pc}
 8000b28:	20020000 	.word	0x20020000
 8000b2c:	00000400 	.word	0x00000400
 8000b30:	20000080 	.word	0x20000080
 8000b34:	200001d0 	.word	0x200001d0

08000b38 <__io_putchar>:
static uint16_t compute_uart_bd(uint32_t PeriphClk, uint32_t Baudrate);
void uart2_write(int ch);


int __io_putchar(int ch)
{
 8000b38:	b580      	push	{r7, lr}
 8000b3a:	b082      	sub	sp, #8
 8000b3c:	af00      	add	r7, sp, #0
 8000b3e:	6078      	str	r0, [r7, #4]
	uart2_write(ch);
 8000b40:	6878      	ldr	r0, [r7, #4]
 8000b42:	f000 f851 	bl	8000be8 <uart2_write>
	return ch;
 8000b46:	687b      	ldr	r3, [r7, #4]
}
 8000b48:	4618      	mov	r0, r3
 8000b4a:	3708      	adds	r7, #8
 8000b4c:	46bd      	mov	sp, r7
 8000b4e:	bd80      	pop	{r7, pc}

08000b50 <uart2_tx_init>:
	//Enable UART module
	USART2->CR1 |= CR1_UE;
}

void uart2_tx_init(void)
{
 8000b50:	b580      	push	{r7, lr}
 8000b52:	af00      	add	r7, sp, #0
	//Configure UART gpio pins
	//Enable clock access to gpioa
	RCC->AHB1ENR |= GPIOAEN;
 8000b54:	4b20      	ldr	r3, [pc, #128]	@ (8000bd8 <uart2_tx_init+0x88>)
 8000b56:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000b58:	4a1f      	ldr	r2, [pc, #124]	@ (8000bd8 <uart2_tx_init+0x88>)
 8000b5a:	f043 0301 	orr.w	r3, r3, #1
 8000b5e:	6313      	str	r3, [r2, #48]	@ 0x30
	//Set PA2 Mode to alternate function mode
	GPIOA->MODER &= ~(1<<4);
 8000b60:	4b1e      	ldr	r3, [pc, #120]	@ (8000bdc <uart2_tx_init+0x8c>)
 8000b62:	681b      	ldr	r3, [r3, #0]
 8000b64:	4a1d      	ldr	r2, [pc, #116]	@ (8000bdc <uart2_tx_init+0x8c>)
 8000b66:	f023 0310 	bic.w	r3, r3, #16
 8000b6a:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |=  (1<<5);
 8000b6c:	4b1b      	ldr	r3, [pc, #108]	@ (8000bdc <uart2_tx_init+0x8c>)
 8000b6e:	681b      	ldr	r3, [r3, #0]
 8000b70:	4a1a      	ldr	r2, [pc, #104]	@ (8000bdc <uart2_tx_init+0x8c>)
 8000b72:	f043 0320 	orr.w	r3, r3, #32
 8000b76:	6013      	str	r3, [r2, #0]

	//Set PA2 alternate function type to UART_TX (AF7)
	GPIOA->AFR[0] |= (1<<8);
 8000b78:	4b18      	ldr	r3, [pc, #96]	@ (8000bdc <uart2_tx_init+0x8c>)
 8000b7a:	6a1b      	ldr	r3, [r3, #32]
 8000b7c:	4a17      	ldr	r2, [pc, #92]	@ (8000bdc <uart2_tx_init+0x8c>)
 8000b7e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000b82:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1<<9);
 8000b84:	4b15      	ldr	r3, [pc, #84]	@ (8000bdc <uart2_tx_init+0x8c>)
 8000b86:	6a1b      	ldr	r3, [r3, #32]
 8000b88:	4a14      	ldr	r2, [pc, #80]	@ (8000bdc <uart2_tx_init+0x8c>)
 8000b8a:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8000b8e:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1<<10);
 8000b90:	4b12      	ldr	r3, [pc, #72]	@ (8000bdc <uart2_tx_init+0x8c>)
 8000b92:	6a1b      	ldr	r3, [r3, #32]
 8000b94:	4a11      	ldr	r2, [pc, #68]	@ (8000bdc <uart2_tx_init+0x8c>)
 8000b96:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8000b9a:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &= ~(1<<11);
 8000b9c:	4b0f      	ldr	r3, [pc, #60]	@ (8000bdc <uart2_tx_init+0x8c>)
 8000b9e:	6a1b      	ldr	r3, [r3, #32]
 8000ba0:	4a0e      	ldr	r2, [pc, #56]	@ (8000bdc <uart2_tx_init+0x8c>)
 8000ba2:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8000ba6:	6213      	str	r3, [r2, #32]


	//Configure UART module
	//Enable access to UART2
	RCC->APB1ENR |= UART2EN;
 8000ba8:	4b0b      	ldr	r3, [pc, #44]	@ (8000bd8 <uart2_tx_init+0x88>)
 8000baa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000bac:	4a0a      	ldr	r2, [pc, #40]	@ (8000bd8 <uart2_tx_init+0x88>)
 8000bae:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8000bb2:	6413      	str	r3, [r2, #64]	@ 0x40
	//Configure baudrate
	uart_set_baudrate(USART2, APB1_CLK, UART_BAUDRATE );
 8000bb4:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8000bb8:	4909      	ldr	r1, [pc, #36]	@ (8000be0 <uart2_tx_init+0x90>)
 8000bba:	480a      	ldr	r0, [pc, #40]	@ (8000be4 <uart2_tx_init+0x94>)
 8000bbc:	f000 f82c 	bl	8000c18 <uart_set_baudrate>
	//Configure the transfer direction
	USART2->CR1 = CR1_TE;
 8000bc0:	4b08      	ldr	r3, [pc, #32]	@ (8000be4 <uart2_tx_init+0x94>)
 8000bc2:	2208      	movs	r2, #8
 8000bc4:	60da      	str	r2, [r3, #12]
	//Enable UART module
	USART2->CR1 |= CR1_UE;
 8000bc6:	4b07      	ldr	r3, [pc, #28]	@ (8000be4 <uart2_tx_init+0x94>)
 8000bc8:	68db      	ldr	r3, [r3, #12]
 8000bca:	4a06      	ldr	r2, [pc, #24]	@ (8000be4 <uart2_tx_init+0x94>)
 8000bcc:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8000bd0:	60d3      	str	r3, [r2, #12]
}
 8000bd2:	bf00      	nop
 8000bd4:	bd80      	pop	{r7, pc}
 8000bd6:	bf00      	nop
 8000bd8:	40023800 	.word	0x40023800
 8000bdc:	40020000 	.word	0x40020000
 8000be0:	00f42400 	.word	0x00f42400
 8000be4:	40004400 	.word	0x40004400

08000be8 <uart2_write>:
	return USART2->DR;
}


void uart2_write(int ch)
{
 8000be8:	b480      	push	{r7}
 8000bea:	b083      	sub	sp, #12
 8000bec:	af00      	add	r7, sp, #0
 8000bee:	6078      	str	r0, [r7, #4]
	//Make sure the transmit data register is empty
	while (!(USART2->SR & SR_TXE)){}
 8000bf0:	bf00      	nop
 8000bf2:	4b08      	ldr	r3, [pc, #32]	@ (8000c14 <uart2_write+0x2c>)
 8000bf4:	681b      	ldr	r3, [r3, #0]
 8000bf6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000bfa:	2b00      	cmp	r3, #0
 8000bfc:	d0f9      	beq.n	8000bf2 <uart2_write+0xa>
	//Write to transmit data register
	USART2->DR = (ch & 0xFF);
 8000bfe:	687b      	ldr	r3, [r7, #4]
 8000c00:	4a04      	ldr	r2, [pc, #16]	@ (8000c14 <uart2_write+0x2c>)
 8000c02:	b2db      	uxtb	r3, r3
 8000c04:	6053      	str	r3, [r2, #4]

}
 8000c06:	bf00      	nop
 8000c08:	370c      	adds	r7, #12
 8000c0a:	46bd      	mov	sp, r7
 8000c0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c10:	4770      	bx	lr
 8000c12:	bf00      	nop
 8000c14:	40004400 	.word	0x40004400

08000c18 <uart_set_baudrate>:

static void uart_set_baudrate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t Baudrate)
{
 8000c18:	b580      	push	{r7, lr}
 8000c1a:	b084      	sub	sp, #16
 8000c1c:	af00      	add	r7, sp, #0
 8000c1e:	60f8      	str	r0, [r7, #12]
 8000c20:	60b9      	str	r1, [r7, #8]
 8000c22:	607a      	str	r2, [r7, #4]
	USARTx->BRR = compute_uart_bd(PeriphClk, Baudrate);
 8000c24:	6879      	ldr	r1, [r7, #4]
 8000c26:	68b8      	ldr	r0, [r7, #8]
 8000c28:	f000 f808 	bl	8000c3c <compute_uart_bd>
 8000c2c:	4603      	mov	r3, r0
 8000c2e:	461a      	mov	r2, r3
 8000c30:	68fb      	ldr	r3, [r7, #12]
 8000c32:	609a      	str	r2, [r3, #8]
}
 8000c34:	bf00      	nop
 8000c36:	3710      	adds	r7, #16
 8000c38:	46bd      	mov	sp, r7
 8000c3a:	bd80      	pop	{r7, pc}

08000c3c <compute_uart_bd>:

static uint16_t compute_uart_bd(uint32_t PeriphClk, uint32_t Baudrate)
{
 8000c3c:	b480      	push	{r7}
 8000c3e:	b083      	sub	sp, #12
 8000c40:	af00      	add	r7, sp, #0
 8000c42:	6078      	str	r0, [r7, #4]
 8000c44:	6039      	str	r1, [r7, #0]
	return ((PeriphClk +(Baudrate/2U))/Baudrate);
 8000c46:	683b      	ldr	r3, [r7, #0]
 8000c48:	085a      	lsrs	r2, r3, #1
 8000c4a:	687b      	ldr	r3, [r7, #4]
 8000c4c:	441a      	add	r2, r3
 8000c4e:	683b      	ldr	r3, [r7, #0]
 8000c50:	fbb2 f3f3 	udiv	r3, r2, r3
 8000c54:	b29b      	uxth	r3, r3
}
 8000c56:	4618      	mov	r0, r3
 8000c58:	370c      	adds	r7, #12
 8000c5a:	46bd      	mov	sp, r7
 8000c5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c60:	4770      	bx	lr
	...

08000c64 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000c64:	480d      	ldr	r0, [pc, #52]	@ (8000c9c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000c66:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000c68:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000c6c:	480c      	ldr	r0, [pc, #48]	@ (8000ca0 <LoopForever+0x6>)
  ldr r1, =_edata
 8000c6e:	490d      	ldr	r1, [pc, #52]	@ (8000ca4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000c70:	4a0d      	ldr	r2, [pc, #52]	@ (8000ca8 <LoopForever+0xe>)
  movs r3, #0
 8000c72:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000c74:	e002      	b.n	8000c7c <LoopCopyDataInit>

08000c76 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000c76:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000c78:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000c7a:	3304      	adds	r3, #4

08000c7c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000c7c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000c7e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000c80:	d3f9      	bcc.n	8000c76 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000c82:	4a0a      	ldr	r2, [pc, #40]	@ (8000cac <LoopForever+0x12>)
  ldr r4, =_ebss
 8000c84:	4c0a      	ldr	r4, [pc, #40]	@ (8000cb0 <LoopForever+0x16>)
  movs r3, #0
 8000c86:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000c88:	e001      	b.n	8000c8e <LoopFillZerobss>

08000c8a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000c8a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000c8c:	3204      	adds	r2, #4

08000c8e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000c8e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000c90:	d3fb      	bcc.n	8000c8a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000c92:	f000 f97d 	bl	8000f90 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000c96:	f7ff fe6f 	bl	8000978 <main>

08000c9a <LoopForever>:

LoopForever:
  b LoopForever
 8000c9a:	e7fe      	b.n	8000c9a <LoopForever>
  ldr   r0, =_estack
 8000c9c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000ca0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000ca4:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000ca8:	08001bac 	.word	0x08001bac
  ldr r2, =_sbss
 8000cac:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 8000cb0:	200001d0 	.word	0x200001d0

08000cb4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000cb4:	e7fe      	b.n	8000cb4 <ADC_IRQHandler>
	...

08000cb8 <std>:
 8000cb8:	2300      	movs	r3, #0
 8000cba:	b510      	push	{r4, lr}
 8000cbc:	4604      	mov	r4, r0
 8000cbe:	e9c0 3300 	strd	r3, r3, [r0]
 8000cc2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000cc6:	6083      	str	r3, [r0, #8]
 8000cc8:	8181      	strh	r1, [r0, #12]
 8000cca:	6643      	str	r3, [r0, #100]	@ 0x64
 8000ccc:	81c2      	strh	r2, [r0, #14]
 8000cce:	6183      	str	r3, [r0, #24]
 8000cd0:	4619      	mov	r1, r3
 8000cd2:	2208      	movs	r2, #8
 8000cd4:	305c      	adds	r0, #92	@ 0x5c
 8000cd6:	f000 f906 	bl	8000ee6 <memset>
 8000cda:	4b0d      	ldr	r3, [pc, #52]	@ (8000d10 <std+0x58>)
 8000cdc:	6263      	str	r3, [r4, #36]	@ 0x24
 8000cde:	4b0d      	ldr	r3, [pc, #52]	@ (8000d14 <std+0x5c>)
 8000ce0:	62a3      	str	r3, [r4, #40]	@ 0x28
 8000ce2:	4b0d      	ldr	r3, [pc, #52]	@ (8000d18 <std+0x60>)
 8000ce4:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8000ce6:	4b0d      	ldr	r3, [pc, #52]	@ (8000d1c <std+0x64>)
 8000ce8:	6323      	str	r3, [r4, #48]	@ 0x30
 8000cea:	4b0d      	ldr	r3, [pc, #52]	@ (8000d20 <std+0x68>)
 8000cec:	6224      	str	r4, [r4, #32]
 8000cee:	429c      	cmp	r4, r3
 8000cf0:	d006      	beq.n	8000d00 <std+0x48>
 8000cf2:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8000cf6:	4294      	cmp	r4, r2
 8000cf8:	d002      	beq.n	8000d00 <std+0x48>
 8000cfa:	33d0      	adds	r3, #208	@ 0xd0
 8000cfc:	429c      	cmp	r4, r3
 8000cfe:	d105      	bne.n	8000d0c <std+0x54>
 8000d00:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8000d04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000d08:	f000 b966 	b.w	8000fd8 <__retarget_lock_init_recursive>
 8000d0c:	bd10      	pop	{r4, pc}
 8000d0e:	bf00      	nop
 8000d10:	08000e61 	.word	0x08000e61
 8000d14:	08000e83 	.word	0x08000e83
 8000d18:	08000ebb 	.word	0x08000ebb
 8000d1c:	08000edf 	.word	0x08000edf
 8000d20:	20000084 	.word	0x20000084

08000d24 <stdio_exit_handler>:
 8000d24:	4a02      	ldr	r2, [pc, #8]	@ (8000d30 <stdio_exit_handler+0xc>)
 8000d26:	4903      	ldr	r1, [pc, #12]	@ (8000d34 <stdio_exit_handler+0x10>)
 8000d28:	4803      	ldr	r0, [pc, #12]	@ (8000d38 <stdio_exit_handler+0x14>)
 8000d2a:	f000 b869 	b.w	8000e00 <_fwalk_sglue>
 8000d2e:	bf00      	nop
 8000d30:	20000000 	.word	0x20000000
 8000d34:	08001879 	.word	0x08001879
 8000d38:	20000010 	.word	0x20000010

08000d3c <cleanup_stdio>:
 8000d3c:	6841      	ldr	r1, [r0, #4]
 8000d3e:	4b0c      	ldr	r3, [pc, #48]	@ (8000d70 <cleanup_stdio+0x34>)
 8000d40:	4299      	cmp	r1, r3
 8000d42:	b510      	push	{r4, lr}
 8000d44:	4604      	mov	r4, r0
 8000d46:	d001      	beq.n	8000d4c <cleanup_stdio+0x10>
 8000d48:	f000 fd96 	bl	8001878 <_fflush_r>
 8000d4c:	68a1      	ldr	r1, [r4, #8]
 8000d4e:	4b09      	ldr	r3, [pc, #36]	@ (8000d74 <cleanup_stdio+0x38>)
 8000d50:	4299      	cmp	r1, r3
 8000d52:	d002      	beq.n	8000d5a <cleanup_stdio+0x1e>
 8000d54:	4620      	mov	r0, r4
 8000d56:	f000 fd8f 	bl	8001878 <_fflush_r>
 8000d5a:	68e1      	ldr	r1, [r4, #12]
 8000d5c:	4b06      	ldr	r3, [pc, #24]	@ (8000d78 <cleanup_stdio+0x3c>)
 8000d5e:	4299      	cmp	r1, r3
 8000d60:	d004      	beq.n	8000d6c <cleanup_stdio+0x30>
 8000d62:	4620      	mov	r0, r4
 8000d64:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000d68:	f000 bd86 	b.w	8001878 <_fflush_r>
 8000d6c:	bd10      	pop	{r4, pc}
 8000d6e:	bf00      	nop
 8000d70:	20000084 	.word	0x20000084
 8000d74:	200000ec 	.word	0x200000ec
 8000d78:	20000154 	.word	0x20000154

08000d7c <global_stdio_init.part.0>:
 8000d7c:	b510      	push	{r4, lr}
 8000d7e:	4b0b      	ldr	r3, [pc, #44]	@ (8000dac <global_stdio_init.part.0+0x30>)
 8000d80:	4c0b      	ldr	r4, [pc, #44]	@ (8000db0 <global_stdio_init.part.0+0x34>)
 8000d82:	4a0c      	ldr	r2, [pc, #48]	@ (8000db4 <global_stdio_init.part.0+0x38>)
 8000d84:	601a      	str	r2, [r3, #0]
 8000d86:	4620      	mov	r0, r4
 8000d88:	2200      	movs	r2, #0
 8000d8a:	2104      	movs	r1, #4
 8000d8c:	f7ff ff94 	bl	8000cb8 <std>
 8000d90:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8000d94:	2201      	movs	r2, #1
 8000d96:	2109      	movs	r1, #9
 8000d98:	f7ff ff8e 	bl	8000cb8 <std>
 8000d9c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000da0:	2202      	movs	r2, #2
 8000da2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000da6:	2112      	movs	r1, #18
 8000da8:	f7ff bf86 	b.w	8000cb8 <std>
 8000dac:	200001bc 	.word	0x200001bc
 8000db0:	20000084 	.word	0x20000084
 8000db4:	08000d25 	.word	0x08000d25

08000db8 <__sfp_lock_acquire>:
 8000db8:	4801      	ldr	r0, [pc, #4]	@ (8000dc0 <__sfp_lock_acquire+0x8>)
 8000dba:	f000 b90e 	b.w	8000fda <__retarget_lock_acquire_recursive>
 8000dbe:	bf00      	nop
 8000dc0:	200001c5 	.word	0x200001c5

08000dc4 <__sfp_lock_release>:
 8000dc4:	4801      	ldr	r0, [pc, #4]	@ (8000dcc <__sfp_lock_release+0x8>)
 8000dc6:	f000 b909 	b.w	8000fdc <__retarget_lock_release_recursive>
 8000dca:	bf00      	nop
 8000dcc:	200001c5 	.word	0x200001c5

08000dd0 <__sinit>:
 8000dd0:	b510      	push	{r4, lr}
 8000dd2:	4604      	mov	r4, r0
 8000dd4:	f7ff fff0 	bl	8000db8 <__sfp_lock_acquire>
 8000dd8:	6a23      	ldr	r3, [r4, #32]
 8000dda:	b11b      	cbz	r3, 8000de4 <__sinit+0x14>
 8000ddc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000de0:	f7ff bff0 	b.w	8000dc4 <__sfp_lock_release>
 8000de4:	4b04      	ldr	r3, [pc, #16]	@ (8000df8 <__sinit+0x28>)
 8000de6:	6223      	str	r3, [r4, #32]
 8000de8:	4b04      	ldr	r3, [pc, #16]	@ (8000dfc <__sinit+0x2c>)
 8000dea:	681b      	ldr	r3, [r3, #0]
 8000dec:	2b00      	cmp	r3, #0
 8000dee:	d1f5      	bne.n	8000ddc <__sinit+0xc>
 8000df0:	f7ff ffc4 	bl	8000d7c <global_stdio_init.part.0>
 8000df4:	e7f2      	b.n	8000ddc <__sinit+0xc>
 8000df6:	bf00      	nop
 8000df8:	08000d3d 	.word	0x08000d3d
 8000dfc:	200001bc 	.word	0x200001bc

08000e00 <_fwalk_sglue>:
 8000e00:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000e04:	4607      	mov	r7, r0
 8000e06:	4688      	mov	r8, r1
 8000e08:	4614      	mov	r4, r2
 8000e0a:	2600      	movs	r6, #0
 8000e0c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000e10:	f1b9 0901 	subs.w	r9, r9, #1
 8000e14:	d505      	bpl.n	8000e22 <_fwalk_sglue+0x22>
 8000e16:	6824      	ldr	r4, [r4, #0]
 8000e18:	2c00      	cmp	r4, #0
 8000e1a:	d1f7      	bne.n	8000e0c <_fwalk_sglue+0xc>
 8000e1c:	4630      	mov	r0, r6
 8000e1e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000e22:	89ab      	ldrh	r3, [r5, #12]
 8000e24:	2b01      	cmp	r3, #1
 8000e26:	d907      	bls.n	8000e38 <_fwalk_sglue+0x38>
 8000e28:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000e2c:	3301      	adds	r3, #1
 8000e2e:	d003      	beq.n	8000e38 <_fwalk_sglue+0x38>
 8000e30:	4629      	mov	r1, r5
 8000e32:	4638      	mov	r0, r7
 8000e34:	47c0      	blx	r8
 8000e36:	4306      	orrs	r6, r0
 8000e38:	3568      	adds	r5, #104	@ 0x68
 8000e3a:	e7e9      	b.n	8000e10 <_fwalk_sglue+0x10>

08000e3c <iprintf>:
 8000e3c:	b40f      	push	{r0, r1, r2, r3}
 8000e3e:	b507      	push	{r0, r1, r2, lr}
 8000e40:	4906      	ldr	r1, [pc, #24]	@ (8000e5c <iprintf+0x20>)
 8000e42:	ab04      	add	r3, sp, #16
 8000e44:	6808      	ldr	r0, [r1, #0]
 8000e46:	f853 2b04 	ldr.w	r2, [r3], #4
 8000e4a:	6881      	ldr	r1, [r0, #8]
 8000e4c:	9301      	str	r3, [sp, #4]
 8000e4e:	f000 f9e9 	bl	8001224 <_vfiprintf_r>
 8000e52:	b003      	add	sp, #12
 8000e54:	f85d eb04 	ldr.w	lr, [sp], #4
 8000e58:	b004      	add	sp, #16
 8000e5a:	4770      	bx	lr
 8000e5c:	2000000c 	.word	0x2000000c

08000e60 <__sread>:
 8000e60:	b510      	push	{r4, lr}
 8000e62:	460c      	mov	r4, r1
 8000e64:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e68:	f000 f868 	bl	8000f3c <_read_r>
 8000e6c:	2800      	cmp	r0, #0
 8000e6e:	bfab      	itete	ge
 8000e70:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8000e72:	89a3      	ldrhlt	r3, [r4, #12]
 8000e74:	181b      	addge	r3, r3, r0
 8000e76:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8000e7a:	bfac      	ite	ge
 8000e7c:	6563      	strge	r3, [r4, #84]	@ 0x54
 8000e7e:	81a3      	strhlt	r3, [r4, #12]
 8000e80:	bd10      	pop	{r4, pc}

08000e82 <__swrite>:
 8000e82:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000e86:	461f      	mov	r7, r3
 8000e88:	898b      	ldrh	r3, [r1, #12]
 8000e8a:	05db      	lsls	r3, r3, #23
 8000e8c:	4605      	mov	r5, r0
 8000e8e:	460c      	mov	r4, r1
 8000e90:	4616      	mov	r6, r2
 8000e92:	d505      	bpl.n	8000ea0 <__swrite+0x1e>
 8000e94:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e98:	2302      	movs	r3, #2
 8000e9a:	2200      	movs	r2, #0
 8000e9c:	f000 f83c 	bl	8000f18 <_lseek_r>
 8000ea0:	89a3      	ldrh	r3, [r4, #12]
 8000ea2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000ea6:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8000eaa:	81a3      	strh	r3, [r4, #12]
 8000eac:	4632      	mov	r2, r6
 8000eae:	463b      	mov	r3, r7
 8000eb0:	4628      	mov	r0, r5
 8000eb2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000eb6:	f000 b853 	b.w	8000f60 <_write_r>

08000eba <__sseek>:
 8000eba:	b510      	push	{r4, lr}
 8000ebc:	460c      	mov	r4, r1
 8000ebe:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ec2:	f000 f829 	bl	8000f18 <_lseek_r>
 8000ec6:	1c43      	adds	r3, r0, #1
 8000ec8:	89a3      	ldrh	r3, [r4, #12]
 8000eca:	bf15      	itete	ne
 8000ecc:	6560      	strne	r0, [r4, #84]	@ 0x54
 8000ece:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8000ed2:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8000ed6:	81a3      	strheq	r3, [r4, #12]
 8000ed8:	bf18      	it	ne
 8000eda:	81a3      	strhne	r3, [r4, #12]
 8000edc:	bd10      	pop	{r4, pc}

08000ede <__sclose>:
 8000ede:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ee2:	f000 b809 	b.w	8000ef8 <_close_r>

08000ee6 <memset>:
 8000ee6:	4402      	add	r2, r0
 8000ee8:	4603      	mov	r3, r0
 8000eea:	4293      	cmp	r3, r2
 8000eec:	d100      	bne.n	8000ef0 <memset+0xa>
 8000eee:	4770      	bx	lr
 8000ef0:	f803 1b01 	strb.w	r1, [r3], #1
 8000ef4:	e7f9      	b.n	8000eea <memset+0x4>
	...

08000ef8 <_close_r>:
 8000ef8:	b538      	push	{r3, r4, r5, lr}
 8000efa:	4d06      	ldr	r5, [pc, #24]	@ (8000f14 <_close_r+0x1c>)
 8000efc:	2300      	movs	r3, #0
 8000efe:	4604      	mov	r4, r0
 8000f00:	4608      	mov	r0, r1
 8000f02:	602b      	str	r3, [r5, #0]
 8000f04:	f7ff fdad 	bl	8000a62 <_close>
 8000f08:	1c43      	adds	r3, r0, #1
 8000f0a:	d102      	bne.n	8000f12 <_close_r+0x1a>
 8000f0c:	682b      	ldr	r3, [r5, #0]
 8000f0e:	b103      	cbz	r3, 8000f12 <_close_r+0x1a>
 8000f10:	6023      	str	r3, [r4, #0]
 8000f12:	bd38      	pop	{r3, r4, r5, pc}
 8000f14:	200001c0 	.word	0x200001c0

08000f18 <_lseek_r>:
 8000f18:	b538      	push	{r3, r4, r5, lr}
 8000f1a:	4d07      	ldr	r5, [pc, #28]	@ (8000f38 <_lseek_r+0x20>)
 8000f1c:	4604      	mov	r4, r0
 8000f1e:	4608      	mov	r0, r1
 8000f20:	4611      	mov	r1, r2
 8000f22:	2200      	movs	r2, #0
 8000f24:	602a      	str	r2, [r5, #0]
 8000f26:	461a      	mov	r2, r3
 8000f28:	f7ff fdc2 	bl	8000ab0 <_lseek>
 8000f2c:	1c43      	adds	r3, r0, #1
 8000f2e:	d102      	bne.n	8000f36 <_lseek_r+0x1e>
 8000f30:	682b      	ldr	r3, [r5, #0]
 8000f32:	b103      	cbz	r3, 8000f36 <_lseek_r+0x1e>
 8000f34:	6023      	str	r3, [r4, #0]
 8000f36:	bd38      	pop	{r3, r4, r5, pc}
 8000f38:	200001c0 	.word	0x200001c0

08000f3c <_read_r>:
 8000f3c:	b538      	push	{r3, r4, r5, lr}
 8000f3e:	4d07      	ldr	r5, [pc, #28]	@ (8000f5c <_read_r+0x20>)
 8000f40:	4604      	mov	r4, r0
 8000f42:	4608      	mov	r0, r1
 8000f44:	4611      	mov	r1, r2
 8000f46:	2200      	movs	r2, #0
 8000f48:	602a      	str	r2, [r5, #0]
 8000f4a:	461a      	mov	r2, r3
 8000f4c:	f7ff fd50 	bl	80009f0 <_read>
 8000f50:	1c43      	adds	r3, r0, #1
 8000f52:	d102      	bne.n	8000f5a <_read_r+0x1e>
 8000f54:	682b      	ldr	r3, [r5, #0]
 8000f56:	b103      	cbz	r3, 8000f5a <_read_r+0x1e>
 8000f58:	6023      	str	r3, [r4, #0]
 8000f5a:	bd38      	pop	{r3, r4, r5, pc}
 8000f5c:	200001c0 	.word	0x200001c0

08000f60 <_write_r>:
 8000f60:	b538      	push	{r3, r4, r5, lr}
 8000f62:	4d07      	ldr	r5, [pc, #28]	@ (8000f80 <_write_r+0x20>)
 8000f64:	4604      	mov	r4, r0
 8000f66:	4608      	mov	r0, r1
 8000f68:	4611      	mov	r1, r2
 8000f6a:	2200      	movs	r2, #0
 8000f6c:	602a      	str	r2, [r5, #0]
 8000f6e:	461a      	mov	r2, r3
 8000f70:	f7ff fd5b 	bl	8000a2a <_write>
 8000f74:	1c43      	adds	r3, r0, #1
 8000f76:	d102      	bne.n	8000f7e <_write_r+0x1e>
 8000f78:	682b      	ldr	r3, [r5, #0]
 8000f7a:	b103      	cbz	r3, 8000f7e <_write_r+0x1e>
 8000f7c:	6023      	str	r3, [r4, #0]
 8000f7e:	bd38      	pop	{r3, r4, r5, pc}
 8000f80:	200001c0 	.word	0x200001c0

08000f84 <__errno>:
 8000f84:	4b01      	ldr	r3, [pc, #4]	@ (8000f8c <__errno+0x8>)
 8000f86:	6818      	ldr	r0, [r3, #0]
 8000f88:	4770      	bx	lr
 8000f8a:	bf00      	nop
 8000f8c:	2000000c 	.word	0x2000000c

08000f90 <__libc_init_array>:
 8000f90:	b570      	push	{r4, r5, r6, lr}
 8000f92:	4d0d      	ldr	r5, [pc, #52]	@ (8000fc8 <__libc_init_array+0x38>)
 8000f94:	4c0d      	ldr	r4, [pc, #52]	@ (8000fcc <__libc_init_array+0x3c>)
 8000f96:	1b64      	subs	r4, r4, r5
 8000f98:	10a4      	asrs	r4, r4, #2
 8000f9a:	2600      	movs	r6, #0
 8000f9c:	42a6      	cmp	r6, r4
 8000f9e:	d109      	bne.n	8000fb4 <__libc_init_array+0x24>
 8000fa0:	4d0b      	ldr	r5, [pc, #44]	@ (8000fd0 <__libc_init_array+0x40>)
 8000fa2:	4c0c      	ldr	r4, [pc, #48]	@ (8000fd4 <__libc_init_array+0x44>)
 8000fa4:	f000 fdb8 	bl	8001b18 <_init>
 8000fa8:	1b64      	subs	r4, r4, r5
 8000faa:	10a4      	asrs	r4, r4, #2
 8000fac:	2600      	movs	r6, #0
 8000fae:	42a6      	cmp	r6, r4
 8000fb0:	d105      	bne.n	8000fbe <__libc_init_array+0x2e>
 8000fb2:	bd70      	pop	{r4, r5, r6, pc}
 8000fb4:	f855 3b04 	ldr.w	r3, [r5], #4
 8000fb8:	4798      	blx	r3
 8000fba:	3601      	adds	r6, #1
 8000fbc:	e7ee      	b.n	8000f9c <__libc_init_array+0xc>
 8000fbe:	f855 3b04 	ldr.w	r3, [r5], #4
 8000fc2:	4798      	blx	r3
 8000fc4:	3601      	adds	r6, #1
 8000fc6:	e7f2      	b.n	8000fae <__libc_init_array+0x1e>
 8000fc8:	08001ba4 	.word	0x08001ba4
 8000fcc:	08001ba4 	.word	0x08001ba4
 8000fd0:	08001ba4 	.word	0x08001ba4
 8000fd4:	08001ba8 	.word	0x08001ba8

08000fd8 <__retarget_lock_init_recursive>:
 8000fd8:	4770      	bx	lr

08000fda <__retarget_lock_acquire_recursive>:
 8000fda:	4770      	bx	lr

08000fdc <__retarget_lock_release_recursive>:
 8000fdc:	4770      	bx	lr
	...

08000fe0 <_free_r>:
 8000fe0:	b538      	push	{r3, r4, r5, lr}
 8000fe2:	4605      	mov	r5, r0
 8000fe4:	2900      	cmp	r1, #0
 8000fe6:	d041      	beq.n	800106c <_free_r+0x8c>
 8000fe8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000fec:	1f0c      	subs	r4, r1, #4
 8000fee:	2b00      	cmp	r3, #0
 8000ff0:	bfb8      	it	lt
 8000ff2:	18e4      	addlt	r4, r4, r3
 8000ff4:	f000 f8e0 	bl	80011b8 <__malloc_lock>
 8000ff8:	4a1d      	ldr	r2, [pc, #116]	@ (8001070 <_free_r+0x90>)
 8000ffa:	6813      	ldr	r3, [r2, #0]
 8000ffc:	b933      	cbnz	r3, 800100c <_free_r+0x2c>
 8000ffe:	6063      	str	r3, [r4, #4]
 8001000:	6014      	str	r4, [r2, #0]
 8001002:	4628      	mov	r0, r5
 8001004:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001008:	f000 b8dc 	b.w	80011c4 <__malloc_unlock>
 800100c:	42a3      	cmp	r3, r4
 800100e:	d908      	bls.n	8001022 <_free_r+0x42>
 8001010:	6820      	ldr	r0, [r4, #0]
 8001012:	1821      	adds	r1, r4, r0
 8001014:	428b      	cmp	r3, r1
 8001016:	bf01      	itttt	eq
 8001018:	6819      	ldreq	r1, [r3, #0]
 800101a:	685b      	ldreq	r3, [r3, #4]
 800101c:	1809      	addeq	r1, r1, r0
 800101e:	6021      	streq	r1, [r4, #0]
 8001020:	e7ed      	b.n	8000ffe <_free_r+0x1e>
 8001022:	461a      	mov	r2, r3
 8001024:	685b      	ldr	r3, [r3, #4]
 8001026:	b10b      	cbz	r3, 800102c <_free_r+0x4c>
 8001028:	42a3      	cmp	r3, r4
 800102a:	d9fa      	bls.n	8001022 <_free_r+0x42>
 800102c:	6811      	ldr	r1, [r2, #0]
 800102e:	1850      	adds	r0, r2, r1
 8001030:	42a0      	cmp	r0, r4
 8001032:	d10b      	bne.n	800104c <_free_r+0x6c>
 8001034:	6820      	ldr	r0, [r4, #0]
 8001036:	4401      	add	r1, r0
 8001038:	1850      	adds	r0, r2, r1
 800103a:	4283      	cmp	r3, r0
 800103c:	6011      	str	r1, [r2, #0]
 800103e:	d1e0      	bne.n	8001002 <_free_r+0x22>
 8001040:	6818      	ldr	r0, [r3, #0]
 8001042:	685b      	ldr	r3, [r3, #4]
 8001044:	6053      	str	r3, [r2, #4]
 8001046:	4408      	add	r0, r1
 8001048:	6010      	str	r0, [r2, #0]
 800104a:	e7da      	b.n	8001002 <_free_r+0x22>
 800104c:	d902      	bls.n	8001054 <_free_r+0x74>
 800104e:	230c      	movs	r3, #12
 8001050:	602b      	str	r3, [r5, #0]
 8001052:	e7d6      	b.n	8001002 <_free_r+0x22>
 8001054:	6820      	ldr	r0, [r4, #0]
 8001056:	1821      	adds	r1, r4, r0
 8001058:	428b      	cmp	r3, r1
 800105a:	bf04      	itt	eq
 800105c:	6819      	ldreq	r1, [r3, #0]
 800105e:	685b      	ldreq	r3, [r3, #4]
 8001060:	6063      	str	r3, [r4, #4]
 8001062:	bf04      	itt	eq
 8001064:	1809      	addeq	r1, r1, r0
 8001066:	6021      	streq	r1, [r4, #0]
 8001068:	6054      	str	r4, [r2, #4]
 800106a:	e7ca      	b.n	8001002 <_free_r+0x22>
 800106c:	bd38      	pop	{r3, r4, r5, pc}
 800106e:	bf00      	nop
 8001070:	200001cc 	.word	0x200001cc

08001074 <sbrk_aligned>:
 8001074:	b570      	push	{r4, r5, r6, lr}
 8001076:	4e0f      	ldr	r6, [pc, #60]	@ (80010b4 <sbrk_aligned+0x40>)
 8001078:	460c      	mov	r4, r1
 800107a:	6831      	ldr	r1, [r6, #0]
 800107c:	4605      	mov	r5, r0
 800107e:	b911      	cbnz	r1, 8001086 <sbrk_aligned+0x12>
 8001080:	f000 fcb6 	bl	80019f0 <_sbrk_r>
 8001084:	6030      	str	r0, [r6, #0]
 8001086:	4621      	mov	r1, r4
 8001088:	4628      	mov	r0, r5
 800108a:	f000 fcb1 	bl	80019f0 <_sbrk_r>
 800108e:	1c43      	adds	r3, r0, #1
 8001090:	d103      	bne.n	800109a <sbrk_aligned+0x26>
 8001092:	f04f 34ff 	mov.w	r4, #4294967295
 8001096:	4620      	mov	r0, r4
 8001098:	bd70      	pop	{r4, r5, r6, pc}
 800109a:	1cc4      	adds	r4, r0, #3
 800109c:	f024 0403 	bic.w	r4, r4, #3
 80010a0:	42a0      	cmp	r0, r4
 80010a2:	d0f8      	beq.n	8001096 <sbrk_aligned+0x22>
 80010a4:	1a21      	subs	r1, r4, r0
 80010a6:	4628      	mov	r0, r5
 80010a8:	f000 fca2 	bl	80019f0 <_sbrk_r>
 80010ac:	3001      	adds	r0, #1
 80010ae:	d1f2      	bne.n	8001096 <sbrk_aligned+0x22>
 80010b0:	e7ef      	b.n	8001092 <sbrk_aligned+0x1e>
 80010b2:	bf00      	nop
 80010b4:	200001c8 	.word	0x200001c8

080010b8 <_malloc_r>:
 80010b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80010bc:	1ccd      	adds	r5, r1, #3
 80010be:	f025 0503 	bic.w	r5, r5, #3
 80010c2:	3508      	adds	r5, #8
 80010c4:	2d0c      	cmp	r5, #12
 80010c6:	bf38      	it	cc
 80010c8:	250c      	movcc	r5, #12
 80010ca:	2d00      	cmp	r5, #0
 80010cc:	4606      	mov	r6, r0
 80010ce:	db01      	blt.n	80010d4 <_malloc_r+0x1c>
 80010d0:	42a9      	cmp	r1, r5
 80010d2:	d904      	bls.n	80010de <_malloc_r+0x26>
 80010d4:	230c      	movs	r3, #12
 80010d6:	6033      	str	r3, [r6, #0]
 80010d8:	2000      	movs	r0, #0
 80010da:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80010de:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80011b4 <_malloc_r+0xfc>
 80010e2:	f000 f869 	bl	80011b8 <__malloc_lock>
 80010e6:	f8d8 3000 	ldr.w	r3, [r8]
 80010ea:	461c      	mov	r4, r3
 80010ec:	bb44      	cbnz	r4, 8001140 <_malloc_r+0x88>
 80010ee:	4629      	mov	r1, r5
 80010f0:	4630      	mov	r0, r6
 80010f2:	f7ff ffbf 	bl	8001074 <sbrk_aligned>
 80010f6:	1c43      	adds	r3, r0, #1
 80010f8:	4604      	mov	r4, r0
 80010fa:	d158      	bne.n	80011ae <_malloc_r+0xf6>
 80010fc:	f8d8 4000 	ldr.w	r4, [r8]
 8001100:	4627      	mov	r7, r4
 8001102:	2f00      	cmp	r7, #0
 8001104:	d143      	bne.n	800118e <_malloc_r+0xd6>
 8001106:	2c00      	cmp	r4, #0
 8001108:	d04b      	beq.n	80011a2 <_malloc_r+0xea>
 800110a:	6823      	ldr	r3, [r4, #0]
 800110c:	4639      	mov	r1, r7
 800110e:	4630      	mov	r0, r6
 8001110:	eb04 0903 	add.w	r9, r4, r3
 8001114:	f000 fc6c 	bl	80019f0 <_sbrk_r>
 8001118:	4581      	cmp	r9, r0
 800111a:	d142      	bne.n	80011a2 <_malloc_r+0xea>
 800111c:	6821      	ldr	r1, [r4, #0]
 800111e:	1a6d      	subs	r5, r5, r1
 8001120:	4629      	mov	r1, r5
 8001122:	4630      	mov	r0, r6
 8001124:	f7ff ffa6 	bl	8001074 <sbrk_aligned>
 8001128:	3001      	adds	r0, #1
 800112a:	d03a      	beq.n	80011a2 <_malloc_r+0xea>
 800112c:	6823      	ldr	r3, [r4, #0]
 800112e:	442b      	add	r3, r5
 8001130:	6023      	str	r3, [r4, #0]
 8001132:	f8d8 3000 	ldr.w	r3, [r8]
 8001136:	685a      	ldr	r2, [r3, #4]
 8001138:	bb62      	cbnz	r2, 8001194 <_malloc_r+0xdc>
 800113a:	f8c8 7000 	str.w	r7, [r8]
 800113e:	e00f      	b.n	8001160 <_malloc_r+0xa8>
 8001140:	6822      	ldr	r2, [r4, #0]
 8001142:	1b52      	subs	r2, r2, r5
 8001144:	d420      	bmi.n	8001188 <_malloc_r+0xd0>
 8001146:	2a0b      	cmp	r2, #11
 8001148:	d917      	bls.n	800117a <_malloc_r+0xc2>
 800114a:	1961      	adds	r1, r4, r5
 800114c:	42a3      	cmp	r3, r4
 800114e:	6025      	str	r5, [r4, #0]
 8001150:	bf18      	it	ne
 8001152:	6059      	strne	r1, [r3, #4]
 8001154:	6863      	ldr	r3, [r4, #4]
 8001156:	bf08      	it	eq
 8001158:	f8c8 1000 	streq.w	r1, [r8]
 800115c:	5162      	str	r2, [r4, r5]
 800115e:	604b      	str	r3, [r1, #4]
 8001160:	4630      	mov	r0, r6
 8001162:	f000 f82f 	bl	80011c4 <__malloc_unlock>
 8001166:	f104 000b 	add.w	r0, r4, #11
 800116a:	1d23      	adds	r3, r4, #4
 800116c:	f020 0007 	bic.w	r0, r0, #7
 8001170:	1ac2      	subs	r2, r0, r3
 8001172:	bf1c      	itt	ne
 8001174:	1a1b      	subne	r3, r3, r0
 8001176:	50a3      	strne	r3, [r4, r2]
 8001178:	e7af      	b.n	80010da <_malloc_r+0x22>
 800117a:	6862      	ldr	r2, [r4, #4]
 800117c:	42a3      	cmp	r3, r4
 800117e:	bf0c      	ite	eq
 8001180:	f8c8 2000 	streq.w	r2, [r8]
 8001184:	605a      	strne	r2, [r3, #4]
 8001186:	e7eb      	b.n	8001160 <_malloc_r+0xa8>
 8001188:	4623      	mov	r3, r4
 800118a:	6864      	ldr	r4, [r4, #4]
 800118c:	e7ae      	b.n	80010ec <_malloc_r+0x34>
 800118e:	463c      	mov	r4, r7
 8001190:	687f      	ldr	r7, [r7, #4]
 8001192:	e7b6      	b.n	8001102 <_malloc_r+0x4a>
 8001194:	461a      	mov	r2, r3
 8001196:	685b      	ldr	r3, [r3, #4]
 8001198:	42a3      	cmp	r3, r4
 800119a:	d1fb      	bne.n	8001194 <_malloc_r+0xdc>
 800119c:	2300      	movs	r3, #0
 800119e:	6053      	str	r3, [r2, #4]
 80011a0:	e7de      	b.n	8001160 <_malloc_r+0xa8>
 80011a2:	230c      	movs	r3, #12
 80011a4:	6033      	str	r3, [r6, #0]
 80011a6:	4630      	mov	r0, r6
 80011a8:	f000 f80c 	bl	80011c4 <__malloc_unlock>
 80011ac:	e794      	b.n	80010d8 <_malloc_r+0x20>
 80011ae:	6005      	str	r5, [r0, #0]
 80011b0:	e7d6      	b.n	8001160 <_malloc_r+0xa8>
 80011b2:	bf00      	nop
 80011b4:	200001cc 	.word	0x200001cc

080011b8 <__malloc_lock>:
 80011b8:	4801      	ldr	r0, [pc, #4]	@ (80011c0 <__malloc_lock+0x8>)
 80011ba:	f7ff bf0e 	b.w	8000fda <__retarget_lock_acquire_recursive>
 80011be:	bf00      	nop
 80011c0:	200001c4 	.word	0x200001c4

080011c4 <__malloc_unlock>:
 80011c4:	4801      	ldr	r0, [pc, #4]	@ (80011cc <__malloc_unlock+0x8>)
 80011c6:	f7ff bf09 	b.w	8000fdc <__retarget_lock_release_recursive>
 80011ca:	bf00      	nop
 80011cc:	200001c4 	.word	0x200001c4

080011d0 <__sfputc_r>:
 80011d0:	6893      	ldr	r3, [r2, #8]
 80011d2:	3b01      	subs	r3, #1
 80011d4:	2b00      	cmp	r3, #0
 80011d6:	b410      	push	{r4}
 80011d8:	6093      	str	r3, [r2, #8]
 80011da:	da08      	bge.n	80011ee <__sfputc_r+0x1e>
 80011dc:	6994      	ldr	r4, [r2, #24]
 80011de:	42a3      	cmp	r3, r4
 80011e0:	db01      	blt.n	80011e6 <__sfputc_r+0x16>
 80011e2:	290a      	cmp	r1, #10
 80011e4:	d103      	bne.n	80011ee <__sfputc_r+0x1e>
 80011e6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80011ea:	f000 bb6d 	b.w	80018c8 <__swbuf_r>
 80011ee:	6813      	ldr	r3, [r2, #0]
 80011f0:	1c58      	adds	r0, r3, #1
 80011f2:	6010      	str	r0, [r2, #0]
 80011f4:	7019      	strb	r1, [r3, #0]
 80011f6:	4608      	mov	r0, r1
 80011f8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80011fc:	4770      	bx	lr

080011fe <__sfputs_r>:
 80011fe:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001200:	4606      	mov	r6, r0
 8001202:	460f      	mov	r7, r1
 8001204:	4614      	mov	r4, r2
 8001206:	18d5      	adds	r5, r2, r3
 8001208:	42ac      	cmp	r4, r5
 800120a:	d101      	bne.n	8001210 <__sfputs_r+0x12>
 800120c:	2000      	movs	r0, #0
 800120e:	e007      	b.n	8001220 <__sfputs_r+0x22>
 8001210:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001214:	463a      	mov	r2, r7
 8001216:	4630      	mov	r0, r6
 8001218:	f7ff ffda 	bl	80011d0 <__sfputc_r>
 800121c:	1c43      	adds	r3, r0, #1
 800121e:	d1f3      	bne.n	8001208 <__sfputs_r+0xa>
 8001220:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08001224 <_vfiprintf_r>:
 8001224:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001228:	460d      	mov	r5, r1
 800122a:	b09d      	sub	sp, #116	@ 0x74
 800122c:	4614      	mov	r4, r2
 800122e:	4698      	mov	r8, r3
 8001230:	4606      	mov	r6, r0
 8001232:	b118      	cbz	r0, 800123c <_vfiprintf_r+0x18>
 8001234:	6a03      	ldr	r3, [r0, #32]
 8001236:	b90b      	cbnz	r3, 800123c <_vfiprintf_r+0x18>
 8001238:	f7ff fdca 	bl	8000dd0 <__sinit>
 800123c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800123e:	07d9      	lsls	r1, r3, #31
 8001240:	d405      	bmi.n	800124e <_vfiprintf_r+0x2a>
 8001242:	89ab      	ldrh	r3, [r5, #12]
 8001244:	059a      	lsls	r2, r3, #22
 8001246:	d402      	bmi.n	800124e <_vfiprintf_r+0x2a>
 8001248:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800124a:	f7ff fec6 	bl	8000fda <__retarget_lock_acquire_recursive>
 800124e:	89ab      	ldrh	r3, [r5, #12]
 8001250:	071b      	lsls	r3, r3, #28
 8001252:	d501      	bpl.n	8001258 <_vfiprintf_r+0x34>
 8001254:	692b      	ldr	r3, [r5, #16]
 8001256:	b99b      	cbnz	r3, 8001280 <_vfiprintf_r+0x5c>
 8001258:	4629      	mov	r1, r5
 800125a:	4630      	mov	r0, r6
 800125c:	f000 fb72 	bl	8001944 <__swsetup_r>
 8001260:	b170      	cbz	r0, 8001280 <_vfiprintf_r+0x5c>
 8001262:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8001264:	07dc      	lsls	r4, r3, #31
 8001266:	d504      	bpl.n	8001272 <_vfiprintf_r+0x4e>
 8001268:	f04f 30ff 	mov.w	r0, #4294967295
 800126c:	b01d      	add	sp, #116	@ 0x74
 800126e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001272:	89ab      	ldrh	r3, [r5, #12]
 8001274:	0598      	lsls	r0, r3, #22
 8001276:	d4f7      	bmi.n	8001268 <_vfiprintf_r+0x44>
 8001278:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800127a:	f7ff feaf 	bl	8000fdc <__retarget_lock_release_recursive>
 800127e:	e7f3      	b.n	8001268 <_vfiprintf_r+0x44>
 8001280:	2300      	movs	r3, #0
 8001282:	9309      	str	r3, [sp, #36]	@ 0x24
 8001284:	2320      	movs	r3, #32
 8001286:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800128a:	f8cd 800c 	str.w	r8, [sp, #12]
 800128e:	2330      	movs	r3, #48	@ 0x30
 8001290:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8001440 <_vfiprintf_r+0x21c>
 8001294:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8001298:	f04f 0901 	mov.w	r9, #1
 800129c:	4623      	mov	r3, r4
 800129e:	469a      	mov	sl, r3
 80012a0:	f813 2b01 	ldrb.w	r2, [r3], #1
 80012a4:	b10a      	cbz	r2, 80012aa <_vfiprintf_r+0x86>
 80012a6:	2a25      	cmp	r2, #37	@ 0x25
 80012a8:	d1f9      	bne.n	800129e <_vfiprintf_r+0x7a>
 80012aa:	ebba 0b04 	subs.w	fp, sl, r4
 80012ae:	d00b      	beq.n	80012c8 <_vfiprintf_r+0xa4>
 80012b0:	465b      	mov	r3, fp
 80012b2:	4622      	mov	r2, r4
 80012b4:	4629      	mov	r1, r5
 80012b6:	4630      	mov	r0, r6
 80012b8:	f7ff ffa1 	bl	80011fe <__sfputs_r>
 80012bc:	3001      	adds	r0, #1
 80012be:	f000 80a7 	beq.w	8001410 <_vfiprintf_r+0x1ec>
 80012c2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80012c4:	445a      	add	r2, fp
 80012c6:	9209      	str	r2, [sp, #36]	@ 0x24
 80012c8:	f89a 3000 	ldrb.w	r3, [sl]
 80012cc:	2b00      	cmp	r3, #0
 80012ce:	f000 809f 	beq.w	8001410 <_vfiprintf_r+0x1ec>
 80012d2:	2300      	movs	r3, #0
 80012d4:	f04f 32ff 	mov.w	r2, #4294967295
 80012d8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80012dc:	f10a 0a01 	add.w	sl, sl, #1
 80012e0:	9304      	str	r3, [sp, #16]
 80012e2:	9307      	str	r3, [sp, #28]
 80012e4:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80012e8:	931a      	str	r3, [sp, #104]	@ 0x68
 80012ea:	4654      	mov	r4, sl
 80012ec:	2205      	movs	r2, #5
 80012ee:	f814 1b01 	ldrb.w	r1, [r4], #1
 80012f2:	4853      	ldr	r0, [pc, #332]	@ (8001440 <_vfiprintf_r+0x21c>)
 80012f4:	f7fe ff8c 	bl	8000210 <memchr>
 80012f8:	9a04      	ldr	r2, [sp, #16]
 80012fa:	b9d8      	cbnz	r0, 8001334 <_vfiprintf_r+0x110>
 80012fc:	06d1      	lsls	r1, r2, #27
 80012fe:	bf44      	itt	mi
 8001300:	2320      	movmi	r3, #32
 8001302:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8001306:	0713      	lsls	r3, r2, #28
 8001308:	bf44      	itt	mi
 800130a:	232b      	movmi	r3, #43	@ 0x2b
 800130c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8001310:	f89a 3000 	ldrb.w	r3, [sl]
 8001314:	2b2a      	cmp	r3, #42	@ 0x2a
 8001316:	d015      	beq.n	8001344 <_vfiprintf_r+0x120>
 8001318:	9a07      	ldr	r2, [sp, #28]
 800131a:	4654      	mov	r4, sl
 800131c:	2000      	movs	r0, #0
 800131e:	f04f 0c0a 	mov.w	ip, #10
 8001322:	4621      	mov	r1, r4
 8001324:	f811 3b01 	ldrb.w	r3, [r1], #1
 8001328:	3b30      	subs	r3, #48	@ 0x30
 800132a:	2b09      	cmp	r3, #9
 800132c:	d94b      	bls.n	80013c6 <_vfiprintf_r+0x1a2>
 800132e:	b1b0      	cbz	r0, 800135e <_vfiprintf_r+0x13a>
 8001330:	9207      	str	r2, [sp, #28]
 8001332:	e014      	b.n	800135e <_vfiprintf_r+0x13a>
 8001334:	eba0 0308 	sub.w	r3, r0, r8
 8001338:	fa09 f303 	lsl.w	r3, r9, r3
 800133c:	4313      	orrs	r3, r2
 800133e:	9304      	str	r3, [sp, #16]
 8001340:	46a2      	mov	sl, r4
 8001342:	e7d2      	b.n	80012ea <_vfiprintf_r+0xc6>
 8001344:	9b03      	ldr	r3, [sp, #12]
 8001346:	1d19      	adds	r1, r3, #4
 8001348:	681b      	ldr	r3, [r3, #0]
 800134a:	9103      	str	r1, [sp, #12]
 800134c:	2b00      	cmp	r3, #0
 800134e:	bfbb      	ittet	lt
 8001350:	425b      	neglt	r3, r3
 8001352:	f042 0202 	orrlt.w	r2, r2, #2
 8001356:	9307      	strge	r3, [sp, #28]
 8001358:	9307      	strlt	r3, [sp, #28]
 800135a:	bfb8      	it	lt
 800135c:	9204      	strlt	r2, [sp, #16]
 800135e:	7823      	ldrb	r3, [r4, #0]
 8001360:	2b2e      	cmp	r3, #46	@ 0x2e
 8001362:	d10a      	bne.n	800137a <_vfiprintf_r+0x156>
 8001364:	7863      	ldrb	r3, [r4, #1]
 8001366:	2b2a      	cmp	r3, #42	@ 0x2a
 8001368:	d132      	bne.n	80013d0 <_vfiprintf_r+0x1ac>
 800136a:	9b03      	ldr	r3, [sp, #12]
 800136c:	1d1a      	adds	r2, r3, #4
 800136e:	681b      	ldr	r3, [r3, #0]
 8001370:	9203      	str	r2, [sp, #12]
 8001372:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8001376:	3402      	adds	r4, #2
 8001378:	9305      	str	r3, [sp, #20]
 800137a:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8001450 <_vfiprintf_r+0x22c>
 800137e:	7821      	ldrb	r1, [r4, #0]
 8001380:	2203      	movs	r2, #3
 8001382:	4650      	mov	r0, sl
 8001384:	f7fe ff44 	bl	8000210 <memchr>
 8001388:	b138      	cbz	r0, 800139a <_vfiprintf_r+0x176>
 800138a:	9b04      	ldr	r3, [sp, #16]
 800138c:	eba0 000a 	sub.w	r0, r0, sl
 8001390:	2240      	movs	r2, #64	@ 0x40
 8001392:	4082      	lsls	r2, r0
 8001394:	4313      	orrs	r3, r2
 8001396:	3401      	adds	r4, #1
 8001398:	9304      	str	r3, [sp, #16]
 800139a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800139e:	4829      	ldr	r0, [pc, #164]	@ (8001444 <_vfiprintf_r+0x220>)
 80013a0:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80013a4:	2206      	movs	r2, #6
 80013a6:	f7fe ff33 	bl	8000210 <memchr>
 80013aa:	2800      	cmp	r0, #0
 80013ac:	d03f      	beq.n	800142e <_vfiprintf_r+0x20a>
 80013ae:	4b26      	ldr	r3, [pc, #152]	@ (8001448 <_vfiprintf_r+0x224>)
 80013b0:	bb1b      	cbnz	r3, 80013fa <_vfiprintf_r+0x1d6>
 80013b2:	9b03      	ldr	r3, [sp, #12]
 80013b4:	3307      	adds	r3, #7
 80013b6:	f023 0307 	bic.w	r3, r3, #7
 80013ba:	3308      	adds	r3, #8
 80013bc:	9303      	str	r3, [sp, #12]
 80013be:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80013c0:	443b      	add	r3, r7
 80013c2:	9309      	str	r3, [sp, #36]	@ 0x24
 80013c4:	e76a      	b.n	800129c <_vfiprintf_r+0x78>
 80013c6:	fb0c 3202 	mla	r2, ip, r2, r3
 80013ca:	460c      	mov	r4, r1
 80013cc:	2001      	movs	r0, #1
 80013ce:	e7a8      	b.n	8001322 <_vfiprintf_r+0xfe>
 80013d0:	2300      	movs	r3, #0
 80013d2:	3401      	adds	r4, #1
 80013d4:	9305      	str	r3, [sp, #20]
 80013d6:	4619      	mov	r1, r3
 80013d8:	f04f 0c0a 	mov.w	ip, #10
 80013dc:	4620      	mov	r0, r4
 80013de:	f810 2b01 	ldrb.w	r2, [r0], #1
 80013e2:	3a30      	subs	r2, #48	@ 0x30
 80013e4:	2a09      	cmp	r2, #9
 80013e6:	d903      	bls.n	80013f0 <_vfiprintf_r+0x1cc>
 80013e8:	2b00      	cmp	r3, #0
 80013ea:	d0c6      	beq.n	800137a <_vfiprintf_r+0x156>
 80013ec:	9105      	str	r1, [sp, #20]
 80013ee:	e7c4      	b.n	800137a <_vfiprintf_r+0x156>
 80013f0:	fb0c 2101 	mla	r1, ip, r1, r2
 80013f4:	4604      	mov	r4, r0
 80013f6:	2301      	movs	r3, #1
 80013f8:	e7f0      	b.n	80013dc <_vfiprintf_r+0x1b8>
 80013fa:	ab03      	add	r3, sp, #12
 80013fc:	9300      	str	r3, [sp, #0]
 80013fe:	462a      	mov	r2, r5
 8001400:	4b12      	ldr	r3, [pc, #72]	@ (800144c <_vfiprintf_r+0x228>)
 8001402:	a904      	add	r1, sp, #16
 8001404:	4630      	mov	r0, r6
 8001406:	f3af 8000 	nop.w
 800140a:	4607      	mov	r7, r0
 800140c:	1c78      	adds	r0, r7, #1
 800140e:	d1d6      	bne.n	80013be <_vfiprintf_r+0x19a>
 8001410:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8001412:	07d9      	lsls	r1, r3, #31
 8001414:	d405      	bmi.n	8001422 <_vfiprintf_r+0x1fe>
 8001416:	89ab      	ldrh	r3, [r5, #12]
 8001418:	059a      	lsls	r2, r3, #22
 800141a:	d402      	bmi.n	8001422 <_vfiprintf_r+0x1fe>
 800141c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800141e:	f7ff fddd 	bl	8000fdc <__retarget_lock_release_recursive>
 8001422:	89ab      	ldrh	r3, [r5, #12]
 8001424:	065b      	lsls	r3, r3, #25
 8001426:	f53f af1f 	bmi.w	8001268 <_vfiprintf_r+0x44>
 800142a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800142c:	e71e      	b.n	800126c <_vfiprintf_r+0x48>
 800142e:	ab03      	add	r3, sp, #12
 8001430:	9300      	str	r3, [sp, #0]
 8001432:	462a      	mov	r2, r5
 8001434:	4b05      	ldr	r3, [pc, #20]	@ (800144c <_vfiprintf_r+0x228>)
 8001436:	a904      	add	r1, sp, #16
 8001438:	4630      	mov	r0, r6
 800143a:	f000 f879 	bl	8001530 <_printf_i>
 800143e:	e7e4      	b.n	800140a <_vfiprintf_r+0x1e6>
 8001440:	08001b69 	.word	0x08001b69
 8001444:	08001b73 	.word	0x08001b73
 8001448:	00000000 	.word	0x00000000
 800144c:	080011ff 	.word	0x080011ff
 8001450:	08001b6f 	.word	0x08001b6f

08001454 <_printf_common>:
 8001454:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001458:	4616      	mov	r6, r2
 800145a:	4698      	mov	r8, r3
 800145c:	688a      	ldr	r2, [r1, #8]
 800145e:	690b      	ldr	r3, [r1, #16]
 8001460:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8001464:	4293      	cmp	r3, r2
 8001466:	bfb8      	it	lt
 8001468:	4613      	movlt	r3, r2
 800146a:	6033      	str	r3, [r6, #0]
 800146c:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8001470:	4607      	mov	r7, r0
 8001472:	460c      	mov	r4, r1
 8001474:	b10a      	cbz	r2, 800147a <_printf_common+0x26>
 8001476:	3301      	adds	r3, #1
 8001478:	6033      	str	r3, [r6, #0]
 800147a:	6823      	ldr	r3, [r4, #0]
 800147c:	0699      	lsls	r1, r3, #26
 800147e:	bf42      	ittt	mi
 8001480:	6833      	ldrmi	r3, [r6, #0]
 8001482:	3302      	addmi	r3, #2
 8001484:	6033      	strmi	r3, [r6, #0]
 8001486:	6825      	ldr	r5, [r4, #0]
 8001488:	f015 0506 	ands.w	r5, r5, #6
 800148c:	d106      	bne.n	800149c <_printf_common+0x48>
 800148e:	f104 0a19 	add.w	sl, r4, #25
 8001492:	68e3      	ldr	r3, [r4, #12]
 8001494:	6832      	ldr	r2, [r6, #0]
 8001496:	1a9b      	subs	r3, r3, r2
 8001498:	42ab      	cmp	r3, r5
 800149a:	dc26      	bgt.n	80014ea <_printf_common+0x96>
 800149c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 80014a0:	6822      	ldr	r2, [r4, #0]
 80014a2:	3b00      	subs	r3, #0
 80014a4:	bf18      	it	ne
 80014a6:	2301      	movne	r3, #1
 80014a8:	0692      	lsls	r2, r2, #26
 80014aa:	d42b      	bmi.n	8001504 <_printf_common+0xb0>
 80014ac:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 80014b0:	4641      	mov	r1, r8
 80014b2:	4638      	mov	r0, r7
 80014b4:	47c8      	blx	r9
 80014b6:	3001      	adds	r0, #1
 80014b8:	d01e      	beq.n	80014f8 <_printf_common+0xa4>
 80014ba:	6823      	ldr	r3, [r4, #0]
 80014bc:	6922      	ldr	r2, [r4, #16]
 80014be:	f003 0306 	and.w	r3, r3, #6
 80014c2:	2b04      	cmp	r3, #4
 80014c4:	bf02      	ittt	eq
 80014c6:	68e5      	ldreq	r5, [r4, #12]
 80014c8:	6833      	ldreq	r3, [r6, #0]
 80014ca:	1aed      	subeq	r5, r5, r3
 80014cc:	68a3      	ldr	r3, [r4, #8]
 80014ce:	bf0c      	ite	eq
 80014d0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80014d4:	2500      	movne	r5, #0
 80014d6:	4293      	cmp	r3, r2
 80014d8:	bfc4      	itt	gt
 80014da:	1a9b      	subgt	r3, r3, r2
 80014dc:	18ed      	addgt	r5, r5, r3
 80014de:	2600      	movs	r6, #0
 80014e0:	341a      	adds	r4, #26
 80014e2:	42b5      	cmp	r5, r6
 80014e4:	d11a      	bne.n	800151c <_printf_common+0xc8>
 80014e6:	2000      	movs	r0, #0
 80014e8:	e008      	b.n	80014fc <_printf_common+0xa8>
 80014ea:	2301      	movs	r3, #1
 80014ec:	4652      	mov	r2, sl
 80014ee:	4641      	mov	r1, r8
 80014f0:	4638      	mov	r0, r7
 80014f2:	47c8      	blx	r9
 80014f4:	3001      	adds	r0, #1
 80014f6:	d103      	bne.n	8001500 <_printf_common+0xac>
 80014f8:	f04f 30ff 	mov.w	r0, #4294967295
 80014fc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001500:	3501      	adds	r5, #1
 8001502:	e7c6      	b.n	8001492 <_printf_common+0x3e>
 8001504:	18e1      	adds	r1, r4, r3
 8001506:	1c5a      	adds	r2, r3, #1
 8001508:	2030      	movs	r0, #48	@ 0x30
 800150a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800150e:	4422      	add	r2, r4
 8001510:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8001514:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8001518:	3302      	adds	r3, #2
 800151a:	e7c7      	b.n	80014ac <_printf_common+0x58>
 800151c:	2301      	movs	r3, #1
 800151e:	4622      	mov	r2, r4
 8001520:	4641      	mov	r1, r8
 8001522:	4638      	mov	r0, r7
 8001524:	47c8      	blx	r9
 8001526:	3001      	adds	r0, #1
 8001528:	d0e6      	beq.n	80014f8 <_printf_common+0xa4>
 800152a:	3601      	adds	r6, #1
 800152c:	e7d9      	b.n	80014e2 <_printf_common+0x8e>
	...

08001530 <_printf_i>:
 8001530:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001534:	7e0f      	ldrb	r7, [r1, #24]
 8001536:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8001538:	2f78      	cmp	r7, #120	@ 0x78
 800153a:	4691      	mov	r9, r2
 800153c:	4680      	mov	r8, r0
 800153e:	460c      	mov	r4, r1
 8001540:	469a      	mov	sl, r3
 8001542:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8001546:	d807      	bhi.n	8001558 <_printf_i+0x28>
 8001548:	2f62      	cmp	r7, #98	@ 0x62
 800154a:	d80a      	bhi.n	8001562 <_printf_i+0x32>
 800154c:	2f00      	cmp	r7, #0
 800154e:	f000 80d2 	beq.w	80016f6 <_printf_i+0x1c6>
 8001552:	2f58      	cmp	r7, #88	@ 0x58
 8001554:	f000 80b9 	beq.w	80016ca <_printf_i+0x19a>
 8001558:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800155c:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8001560:	e03a      	b.n	80015d8 <_printf_i+0xa8>
 8001562:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8001566:	2b15      	cmp	r3, #21
 8001568:	d8f6      	bhi.n	8001558 <_printf_i+0x28>
 800156a:	a101      	add	r1, pc, #4	@ (adr r1, 8001570 <_printf_i+0x40>)
 800156c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001570:	080015c9 	.word	0x080015c9
 8001574:	080015dd 	.word	0x080015dd
 8001578:	08001559 	.word	0x08001559
 800157c:	08001559 	.word	0x08001559
 8001580:	08001559 	.word	0x08001559
 8001584:	08001559 	.word	0x08001559
 8001588:	080015dd 	.word	0x080015dd
 800158c:	08001559 	.word	0x08001559
 8001590:	08001559 	.word	0x08001559
 8001594:	08001559 	.word	0x08001559
 8001598:	08001559 	.word	0x08001559
 800159c:	080016dd 	.word	0x080016dd
 80015a0:	08001607 	.word	0x08001607
 80015a4:	08001697 	.word	0x08001697
 80015a8:	08001559 	.word	0x08001559
 80015ac:	08001559 	.word	0x08001559
 80015b0:	080016ff 	.word	0x080016ff
 80015b4:	08001559 	.word	0x08001559
 80015b8:	08001607 	.word	0x08001607
 80015bc:	08001559 	.word	0x08001559
 80015c0:	08001559 	.word	0x08001559
 80015c4:	0800169f 	.word	0x0800169f
 80015c8:	6833      	ldr	r3, [r6, #0]
 80015ca:	1d1a      	adds	r2, r3, #4
 80015cc:	681b      	ldr	r3, [r3, #0]
 80015ce:	6032      	str	r2, [r6, #0]
 80015d0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80015d4:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80015d8:	2301      	movs	r3, #1
 80015da:	e09d      	b.n	8001718 <_printf_i+0x1e8>
 80015dc:	6833      	ldr	r3, [r6, #0]
 80015de:	6820      	ldr	r0, [r4, #0]
 80015e0:	1d19      	adds	r1, r3, #4
 80015e2:	6031      	str	r1, [r6, #0]
 80015e4:	0606      	lsls	r6, r0, #24
 80015e6:	d501      	bpl.n	80015ec <_printf_i+0xbc>
 80015e8:	681d      	ldr	r5, [r3, #0]
 80015ea:	e003      	b.n	80015f4 <_printf_i+0xc4>
 80015ec:	0645      	lsls	r5, r0, #25
 80015ee:	d5fb      	bpl.n	80015e8 <_printf_i+0xb8>
 80015f0:	f9b3 5000 	ldrsh.w	r5, [r3]
 80015f4:	2d00      	cmp	r5, #0
 80015f6:	da03      	bge.n	8001600 <_printf_i+0xd0>
 80015f8:	232d      	movs	r3, #45	@ 0x2d
 80015fa:	426d      	negs	r5, r5
 80015fc:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001600:	4859      	ldr	r0, [pc, #356]	@ (8001768 <_printf_i+0x238>)
 8001602:	230a      	movs	r3, #10
 8001604:	e011      	b.n	800162a <_printf_i+0xfa>
 8001606:	6821      	ldr	r1, [r4, #0]
 8001608:	6833      	ldr	r3, [r6, #0]
 800160a:	0608      	lsls	r0, r1, #24
 800160c:	f853 5b04 	ldr.w	r5, [r3], #4
 8001610:	d402      	bmi.n	8001618 <_printf_i+0xe8>
 8001612:	0649      	lsls	r1, r1, #25
 8001614:	bf48      	it	mi
 8001616:	b2ad      	uxthmi	r5, r5
 8001618:	2f6f      	cmp	r7, #111	@ 0x6f
 800161a:	4853      	ldr	r0, [pc, #332]	@ (8001768 <_printf_i+0x238>)
 800161c:	6033      	str	r3, [r6, #0]
 800161e:	bf14      	ite	ne
 8001620:	230a      	movne	r3, #10
 8001622:	2308      	moveq	r3, #8
 8001624:	2100      	movs	r1, #0
 8001626:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800162a:	6866      	ldr	r6, [r4, #4]
 800162c:	60a6      	str	r6, [r4, #8]
 800162e:	2e00      	cmp	r6, #0
 8001630:	bfa2      	ittt	ge
 8001632:	6821      	ldrge	r1, [r4, #0]
 8001634:	f021 0104 	bicge.w	r1, r1, #4
 8001638:	6021      	strge	r1, [r4, #0]
 800163a:	b90d      	cbnz	r5, 8001640 <_printf_i+0x110>
 800163c:	2e00      	cmp	r6, #0
 800163e:	d04b      	beq.n	80016d8 <_printf_i+0x1a8>
 8001640:	4616      	mov	r6, r2
 8001642:	fbb5 f1f3 	udiv	r1, r5, r3
 8001646:	fb03 5711 	mls	r7, r3, r1, r5
 800164a:	5dc7      	ldrb	r7, [r0, r7]
 800164c:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8001650:	462f      	mov	r7, r5
 8001652:	42bb      	cmp	r3, r7
 8001654:	460d      	mov	r5, r1
 8001656:	d9f4      	bls.n	8001642 <_printf_i+0x112>
 8001658:	2b08      	cmp	r3, #8
 800165a:	d10b      	bne.n	8001674 <_printf_i+0x144>
 800165c:	6823      	ldr	r3, [r4, #0]
 800165e:	07df      	lsls	r7, r3, #31
 8001660:	d508      	bpl.n	8001674 <_printf_i+0x144>
 8001662:	6923      	ldr	r3, [r4, #16]
 8001664:	6861      	ldr	r1, [r4, #4]
 8001666:	4299      	cmp	r1, r3
 8001668:	bfde      	ittt	le
 800166a:	2330      	movle	r3, #48	@ 0x30
 800166c:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001670:	f106 36ff 	addle.w	r6, r6, #4294967295
 8001674:	1b92      	subs	r2, r2, r6
 8001676:	6122      	str	r2, [r4, #16]
 8001678:	f8cd a000 	str.w	sl, [sp]
 800167c:	464b      	mov	r3, r9
 800167e:	aa03      	add	r2, sp, #12
 8001680:	4621      	mov	r1, r4
 8001682:	4640      	mov	r0, r8
 8001684:	f7ff fee6 	bl	8001454 <_printf_common>
 8001688:	3001      	adds	r0, #1
 800168a:	d14a      	bne.n	8001722 <_printf_i+0x1f2>
 800168c:	f04f 30ff 	mov.w	r0, #4294967295
 8001690:	b004      	add	sp, #16
 8001692:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001696:	6823      	ldr	r3, [r4, #0]
 8001698:	f043 0320 	orr.w	r3, r3, #32
 800169c:	6023      	str	r3, [r4, #0]
 800169e:	4833      	ldr	r0, [pc, #204]	@ (800176c <_printf_i+0x23c>)
 80016a0:	2778      	movs	r7, #120	@ 0x78
 80016a2:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80016a6:	6823      	ldr	r3, [r4, #0]
 80016a8:	6831      	ldr	r1, [r6, #0]
 80016aa:	061f      	lsls	r7, r3, #24
 80016ac:	f851 5b04 	ldr.w	r5, [r1], #4
 80016b0:	d402      	bmi.n	80016b8 <_printf_i+0x188>
 80016b2:	065f      	lsls	r7, r3, #25
 80016b4:	bf48      	it	mi
 80016b6:	b2ad      	uxthmi	r5, r5
 80016b8:	6031      	str	r1, [r6, #0]
 80016ba:	07d9      	lsls	r1, r3, #31
 80016bc:	bf44      	itt	mi
 80016be:	f043 0320 	orrmi.w	r3, r3, #32
 80016c2:	6023      	strmi	r3, [r4, #0]
 80016c4:	b11d      	cbz	r5, 80016ce <_printf_i+0x19e>
 80016c6:	2310      	movs	r3, #16
 80016c8:	e7ac      	b.n	8001624 <_printf_i+0xf4>
 80016ca:	4827      	ldr	r0, [pc, #156]	@ (8001768 <_printf_i+0x238>)
 80016cc:	e7e9      	b.n	80016a2 <_printf_i+0x172>
 80016ce:	6823      	ldr	r3, [r4, #0]
 80016d0:	f023 0320 	bic.w	r3, r3, #32
 80016d4:	6023      	str	r3, [r4, #0]
 80016d6:	e7f6      	b.n	80016c6 <_printf_i+0x196>
 80016d8:	4616      	mov	r6, r2
 80016da:	e7bd      	b.n	8001658 <_printf_i+0x128>
 80016dc:	6833      	ldr	r3, [r6, #0]
 80016de:	6825      	ldr	r5, [r4, #0]
 80016e0:	6961      	ldr	r1, [r4, #20]
 80016e2:	1d18      	adds	r0, r3, #4
 80016e4:	6030      	str	r0, [r6, #0]
 80016e6:	062e      	lsls	r6, r5, #24
 80016e8:	681b      	ldr	r3, [r3, #0]
 80016ea:	d501      	bpl.n	80016f0 <_printf_i+0x1c0>
 80016ec:	6019      	str	r1, [r3, #0]
 80016ee:	e002      	b.n	80016f6 <_printf_i+0x1c6>
 80016f0:	0668      	lsls	r0, r5, #25
 80016f2:	d5fb      	bpl.n	80016ec <_printf_i+0x1bc>
 80016f4:	8019      	strh	r1, [r3, #0]
 80016f6:	2300      	movs	r3, #0
 80016f8:	6123      	str	r3, [r4, #16]
 80016fa:	4616      	mov	r6, r2
 80016fc:	e7bc      	b.n	8001678 <_printf_i+0x148>
 80016fe:	6833      	ldr	r3, [r6, #0]
 8001700:	1d1a      	adds	r2, r3, #4
 8001702:	6032      	str	r2, [r6, #0]
 8001704:	681e      	ldr	r6, [r3, #0]
 8001706:	6862      	ldr	r2, [r4, #4]
 8001708:	2100      	movs	r1, #0
 800170a:	4630      	mov	r0, r6
 800170c:	f7fe fd80 	bl	8000210 <memchr>
 8001710:	b108      	cbz	r0, 8001716 <_printf_i+0x1e6>
 8001712:	1b80      	subs	r0, r0, r6
 8001714:	6060      	str	r0, [r4, #4]
 8001716:	6863      	ldr	r3, [r4, #4]
 8001718:	6123      	str	r3, [r4, #16]
 800171a:	2300      	movs	r3, #0
 800171c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001720:	e7aa      	b.n	8001678 <_printf_i+0x148>
 8001722:	6923      	ldr	r3, [r4, #16]
 8001724:	4632      	mov	r2, r6
 8001726:	4649      	mov	r1, r9
 8001728:	4640      	mov	r0, r8
 800172a:	47d0      	blx	sl
 800172c:	3001      	adds	r0, #1
 800172e:	d0ad      	beq.n	800168c <_printf_i+0x15c>
 8001730:	6823      	ldr	r3, [r4, #0]
 8001732:	079b      	lsls	r3, r3, #30
 8001734:	d413      	bmi.n	800175e <_printf_i+0x22e>
 8001736:	68e0      	ldr	r0, [r4, #12]
 8001738:	9b03      	ldr	r3, [sp, #12]
 800173a:	4298      	cmp	r0, r3
 800173c:	bfb8      	it	lt
 800173e:	4618      	movlt	r0, r3
 8001740:	e7a6      	b.n	8001690 <_printf_i+0x160>
 8001742:	2301      	movs	r3, #1
 8001744:	4632      	mov	r2, r6
 8001746:	4649      	mov	r1, r9
 8001748:	4640      	mov	r0, r8
 800174a:	47d0      	blx	sl
 800174c:	3001      	adds	r0, #1
 800174e:	d09d      	beq.n	800168c <_printf_i+0x15c>
 8001750:	3501      	adds	r5, #1
 8001752:	68e3      	ldr	r3, [r4, #12]
 8001754:	9903      	ldr	r1, [sp, #12]
 8001756:	1a5b      	subs	r3, r3, r1
 8001758:	42ab      	cmp	r3, r5
 800175a:	dcf2      	bgt.n	8001742 <_printf_i+0x212>
 800175c:	e7eb      	b.n	8001736 <_printf_i+0x206>
 800175e:	2500      	movs	r5, #0
 8001760:	f104 0619 	add.w	r6, r4, #25
 8001764:	e7f5      	b.n	8001752 <_printf_i+0x222>
 8001766:	bf00      	nop
 8001768:	08001b7a 	.word	0x08001b7a
 800176c:	08001b8b 	.word	0x08001b8b

08001770 <__sflush_r>:
 8001770:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8001774:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001778:	0716      	lsls	r6, r2, #28
 800177a:	4605      	mov	r5, r0
 800177c:	460c      	mov	r4, r1
 800177e:	d454      	bmi.n	800182a <__sflush_r+0xba>
 8001780:	684b      	ldr	r3, [r1, #4]
 8001782:	2b00      	cmp	r3, #0
 8001784:	dc02      	bgt.n	800178c <__sflush_r+0x1c>
 8001786:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8001788:	2b00      	cmp	r3, #0
 800178a:	dd48      	ble.n	800181e <__sflush_r+0xae>
 800178c:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800178e:	2e00      	cmp	r6, #0
 8001790:	d045      	beq.n	800181e <__sflush_r+0xae>
 8001792:	2300      	movs	r3, #0
 8001794:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8001798:	682f      	ldr	r7, [r5, #0]
 800179a:	6a21      	ldr	r1, [r4, #32]
 800179c:	602b      	str	r3, [r5, #0]
 800179e:	d030      	beq.n	8001802 <__sflush_r+0x92>
 80017a0:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80017a2:	89a3      	ldrh	r3, [r4, #12]
 80017a4:	0759      	lsls	r1, r3, #29
 80017a6:	d505      	bpl.n	80017b4 <__sflush_r+0x44>
 80017a8:	6863      	ldr	r3, [r4, #4]
 80017aa:	1ad2      	subs	r2, r2, r3
 80017ac:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80017ae:	b10b      	cbz	r3, 80017b4 <__sflush_r+0x44>
 80017b0:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80017b2:	1ad2      	subs	r2, r2, r3
 80017b4:	2300      	movs	r3, #0
 80017b6:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80017b8:	6a21      	ldr	r1, [r4, #32]
 80017ba:	4628      	mov	r0, r5
 80017bc:	47b0      	blx	r6
 80017be:	1c43      	adds	r3, r0, #1
 80017c0:	89a3      	ldrh	r3, [r4, #12]
 80017c2:	d106      	bne.n	80017d2 <__sflush_r+0x62>
 80017c4:	6829      	ldr	r1, [r5, #0]
 80017c6:	291d      	cmp	r1, #29
 80017c8:	d82b      	bhi.n	8001822 <__sflush_r+0xb2>
 80017ca:	4a2a      	ldr	r2, [pc, #168]	@ (8001874 <__sflush_r+0x104>)
 80017cc:	410a      	asrs	r2, r1
 80017ce:	07d6      	lsls	r6, r2, #31
 80017d0:	d427      	bmi.n	8001822 <__sflush_r+0xb2>
 80017d2:	2200      	movs	r2, #0
 80017d4:	6062      	str	r2, [r4, #4]
 80017d6:	04d9      	lsls	r1, r3, #19
 80017d8:	6922      	ldr	r2, [r4, #16]
 80017da:	6022      	str	r2, [r4, #0]
 80017dc:	d504      	bpl.n	80017e8 <__sflush_r+0x78>
 80017de:	1c42      	adds	r2, r0, #1
 80017e0:	d101      	bne.n	80017e6 <__sflush_r+0x76>
 80017e2:	682b      	ldr	r3, [r5, #0]
 80017e4:	b903      	cbnz	r3, 80017e8 <__sflush_r+0x78>
 80017e6:	6560      	str	r0, [r4, #84]	@ 0x54
 80017e8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80017ea:	602f      	str	r7, [r5, #0]
 80017ec:	b1b9      	cbz	r1, 800181e <__sflush_r+0xae>
 80017ee:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80017f2:	4299      	cmp	r1, r3
 80017f4:	d002      	beq.n	80017fc <__sflush_r+0x8c>
 80017f6:	4628      	mov	r0, r5
 80017f8:	f7ff fbf2 	bl	8000fe0 <_free_r>
 80017fc:	2300      	movs	r3, #0
 80017fe:	6363      	str	r3, [r4, #52]	@ 0x34
 8001800:	e00d      	b.n	800181e <__sflush_r+0xae>
 8001802:	2301      	movs	r3, #1
 8001804:	4628      	mov	r0, r5
 8001806:	47b0      	blx	r6
 8001808:	4602      	mov	r2, r0
 800180a:	1c50      	adds	r0, r2, #1
 800180c:	d1c9      	bne.n	80017a2 <__sflush_r+0x32>
 800180e:	682b      	ldr	r3, [r5, #0]
 8001810:	2b00      	cmp	r3, #0
 8001812:	d0c6      	beq.n	80017a2 <__sflush_r+0x32>
 8001814:	2b1d      	cmp	r3, #29
 8001816:	d001      	beq.n	800181c <__sflush_r+0xac>
 8001818:	2b16      	cmp	r3, #22
 800181a:	d11e      	bne.n	800185a <__sflush_r+0xea>
 800181c:	602f      	str	r7, [r5, #0]
 800181e:	2000      	movs	r0, #0
 8001820:	e022      	b.n	8001868 <__sflush_r+0xf8>
 8001822:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001826:	b21b      	sxth	r3, r3
 8001828:	e01b      	b.n	8001862 <__sflush_r+0xf2>
 800182a:	690f      	ldr	r7, [r1, #16]
 800182c:	2f00      	cmp	r7, #0
 800182e:	d0f6      	beq.n	800181e <__sflush_r+0xae>
 8001830:	0793      	lsls	r3, r2, #30
 8001832:	680e      	ldr	r6, [r1, #0]
 8001834:	bf08      	it	eq
 8001836:	694b      	ldreq	r3, [r1, #20]
 8001838:	600f      	str	r7, [r1, #0]
 800183a:	bf18      	it	ne
 800183c:	2300      	movne	r3, #0
 800183e:	eba6 0807 	sub.w	r8, r6, r7
 8001842:	608b      	str	r3, [r1, #8]
 8001844:	f1b8 0f00 	cmp.w	r8, #0
 8001848:	dde9      	ble.n	800181e <__sflush_r+0xae>
 800184a:	6a21      	ldr	r1, [r4, #32]
 800184c:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 800184e:	4643      	mov	r3, r8
 8001850:	463a      	mov	r2, r7
 8001852:	4628      	mov	r0, r5
 8001854:	47b0      	blx	r6
 8001856:	2800      	cmp	r0, #0
 8001858:	dc08      	bgt.n	800186c <__sflush_r+0xfc>
 800185a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800185e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001862:	81a3      	strh	r3, [r4, #12]
 8001864:	f04f 30ff 	mov.w	r0, #4294967295
 8001868:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800186c:	4407      	add	r7, r0
 800186e:	eba8 0800 	sub.w	r8, r8, r0
 8001872:	e7e7      	b.n	8001844 <__sflush_r+0xd4>
 8001874:	dfbffffe 	.word	0xdfbffffe

08001878 <_fflush_r>:
 8001878:	b538      	push	{r3, r4, r5, lr}
 800187a:	690b      	ldr	r3, [r1, #16]
 800187c:	4605      	mov	r5, r0
 800187e:	460c      	mov	r4, r1
 8001880:	b913      	cbnz	r3, 8001888 <_fflush_r+0x10>
 8001882:	2500      	movs	r5, #0
 8001884:	4628      	mov	r0, r5
 8001886:	bd38      	pop	{r3, r4, r5, pc}
 8001888:	b118      	cbz	r0, 8001892 <_fflush_r+0x1a>
 800188a:	6a03      	ldr	r3, [r0, #32]
 800188c:	b90b      	cbnz	r3, 8001892 <_fflush_r+0x1a>
 800188e:	f7ff fa9f 	bl	8000dd0 <__sinit>
 8001892:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001896:	2b00      	cmp	r3, #0
 8001898:	d0f3      	beq.n	8001882 <_fflush_r+0xa>
 800189a:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 800189c:	07d0      	lsls	r0, r2, #31
 800189e:	d404      	bmi.n	80018aa <_fflush_r+0x32>
 80018a0:	0599      	lsls	r1, r3, #22
 80018a2:	d402      	bmi.n	80018aa <_fflush_r+0x32>
 80018a4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80018a6:	f7ff fb98 	bl	8000fda <__retarget_lock_acquire_recursive>
 80018aa:	4628      	mov	r0, r5
 80018ac:	4621      	mov	r1, r4
 80018ae:	f7ff ff5f 	bl	8001770 <__sflush_r>
 80018b2:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80018b4:	07da      	lsls	r2, r3, #31
 80018b6:	4605      	mov	r5, r0
 80018b8:	d4e4      	bmi.n	8001884 <_fflush_r+0xc>
 80018ba:	89a3      	ldrh	r3, [r4, #12]
 80018bc:	059b      	lsls	r3, r3, #22
 80018be:	d4e1      	bmi.n	8001884 <_fflush_r+0xc>
 80018c0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80018c2:	f7ff fb8b 	bl	8000fdc <__retarget_lock_release_recursive>
 80018c6:	e7dd      	b.n	8001884 <_fflush_r+0xc>

080018c8 <__swbuf_r>:
 80018c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80018ca:	460e      	mov	r6, r1
 80018cc:	4614      	mov	r4, r2
 80018ce:	4605      	mov	r5, r0
 80018d0:	b118      	cbz	r0, 80018da <__swbuf_r+0x12>
 80018d2:	6a03      	ldr	r3, [r0, #32]
 80018d4:	b90b      	cbnz	r3, 80018da <__swbuf_r+0x12>
 80018d6:	f7ff fa7b 	bl	8000dd0 <__sinit>
 80018da:	69a3      	ldr	r3, [r4, #24]
 80018dc:	60a3      	str	r3, [r4, #8]
 80018de:	89a3      	ldrh	r3, [r4, #12]
 80018e0:	071a      	lsls	r2, r3, #28
 80018e2:	d501      	bpl.n	80018e8 <__swbuf_r+0x20>
 80018e4:	6923      	ldr	r3, [r4, #16]
 80018e6:	b943      	cbnz	r3, 80018fa <__swbuf_r+0x32>
 80018e8:	4621      	mov	r1, r4
 80018ea:	4628      	mov	r0, r5
 80018ec:	f000 f82a 	bl	8001944 <__swsetup_r>
 80018f0:	b118      	cbz	r0, 80018fa <__swbuf_r+0x32>
 80018f2:	f04f 37ff 	mov.w	r7, #4294967295
 80018f6:	4638      	mov	r0, r7
 80018f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80018fa:	6823      	ldr	r3, [r4, #0]
 80018fc:	6922      	ldr	r2, [r4, #16]
 80018fe:	1a98      	subs	r0, r3, r2
 8001900:	6963      	ldr	r3, [r4, #20]
 8001902:	b2f6      	uxtb	r6, r6
 8001904:	4283      	cmp	r3, r0
 8001906:	4637      	mov	r7, r6
 8001908:	dc05      	bgt.n	8001916 <__swbuf_r+0x4e>
 800190a:	4621      	mov	r1, r4
 800190c:	4628      	mov	r0, r5
 800190e:	f7ff ffb3 	bl	8001878 <_fflush_r>
 8001912:	2800      	cmp	r0, #0
 8001914:	d1ed      	bne.n	80018f2 <__swbuf_r+0x2a>
 8001916:	68a3      	ldr	r3, [r4, #8]
 8001918:	3b01      	subs	r3, #1
 800191a:	60a3      	str	r3, [r4, #8]
 800191c:	6823      	ldr	r3, [r4, #0]
 800191e:	1c5a      	adds	r2, r3, #1
 8001920:	6022      	str	r2, [r4, #0]
 8001922:	701e      	strb	r6, [r3, #0]
 8001924:	6962      	ldr	r2, [r4, #20]
 8001926:	1c43      	adds	r3, r0, #1
 8001928:	429a      	cmp	r2, r3
 800192a:	d004      	beq.n	8001936 <__swbuf_r+0x6e>
 800192c:	89a3      	ldrh	r3, [r4, #12]
 800192e:	07db      	lsls	r3, r3, #31
 8001930:	d5e1      	bpl.n	80018f6 <__swbuf_r+0x2e>
 8001932:	2e0a      	cmp	r6, #10
 8001934:	d1df      	bne.n	80018f6 <__swbuf_r+0x2e>
 8001936:	4621      	mov	r1, r4
 8001938:	4628      	mov	r0, r5
 800193a:	f7ff ff9d 	bl	8001878 <_fflush_r>
 800193e:	2800      	cmp	r0, #0
 8001940:	d0d9      	beq.n	80018f6 <__swbuf_r+0x2e>
 8001942:	e7d6      	b.n	80018f2 <__swbuf_r+0x2a>

08001944 <__swsetup_r>:
 8001944:	b538      	push	{r3, r4, r5, lr}
 8001946:	4b29      	ldr	r3, [pc, #164]	@ (80019ec <__swsetup_r+0xa8>)
 8001948:	4605      	mov	r5, r0
 800194a:	6818      	ldr	r0, [r3, #0]
 800194c:	460c      	mov	r4, r1
 800194e:	b118      	cbz	r0, 8001958 <__swsetup_r+0x14>
 8001950:	6a03      	ldr	r3, [r0, #32]
 8001952:	b90b      	cbnz	r3, 8001958 <__swsetup_r+0x14>
 8001954:	f7ff fa3c 	bl	8000dd0 <__sinit>
 8001958:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800195c:	0719      	lsls	r1, r3, #28
 800195e:	d422      	bmi.n	80019a6 <__swsetup_r+0x62>
 8001960:	06da      	lsls	r2, r3, #27
 8001962:	d407      	bmi.n	8001974 <__swsetup_r+0x30>
 8001964:	2209      	movs	r2, #9
 8001966:	602a      	str	r2, [r5, #0]
 8001968:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800196c:	81a3      	strh	r3, [r4, #12]
 800196e:	f04f 30ff 	mov.w	r0, #4294967295
 8001972:	e033      	b.n	80019dc <__swsetup_r+0x98>
 8001974:	0758      	lsls	r0, r3, #29
 8001976:	d512      	bpl.n	800199e <__swsetup_r+0x5a>
 8001978:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800197a:	b141      	cbz	r1, 800198e <__swsetup_r+0x4a>
 800197c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8001980:	4299      	cmp	r1, r3
 8001982:	d002      	beq.n	800198a <__swsetup_r+0x46>
 8001984:	4628      	mov	r0, r5
 8001986:	f7ff fb2b 	bl	8000fe0 <_free_r>
 800198a:	2300      	movs	r3, #0
 800198c:	6363      	str	r3, [r4, #52]	@ 0x34
 800198e:	89a3      	ldrh	r3, [r4, #12]
 8001990:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8001994:	81a3      	strh	r3, [r4, #12]
 8001996:	2300      	movs	r3, #0
 8001998:	6063      	str	r3, [r4, #4]
 800199a:	6923      	ldr	r3, [r4, #16]
 800199c:	6023      	str	r3, [r4, #0]
 800199e:	89a3      	ldrh	r3, [r4, #12]
 80019a0:	f043 0308 	orr.w	r3, r3, #8
 80019a4:	81a3      	strh	r3, [r4, #12]
 80019a6:	6923      	ldr	r3, [r4, #16]
 80019a8:	b94b      	cbnz	r3, 80019be <__swsetup_r+0x7a>
 80019aa:	89a3      	ldrh	r3, [r4, #12]
 80019ac:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80019b0:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80019b4:	d003      	beq.n	80019be <__swsetup_r+0x7a>
 80019b6:	4621      	mov	r1, r4
 80019b8:	4628      	mov	r0, r5
 80019ba:	f000 f84f 	bl	8001a5c <__smakebuf_r>
 80019be:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80019c2:	f013 0201 	ands.w	r2, r3, #1
 80019c6:	d00a      	beq.n	80019de <__swsetup_r+0x9a>
 80019c8:	2200      	movs	r2, #0
 80019ca:	60a2      	str	r2, [r4, #8]
 80019cc:	6962      	ldr	r2, [r4, #20]
 80019ce:	4252      	negs	r2, r2
 80019d0:	61a2      	str	r2, [r4, #24]
 80019d2:	6922      	ldr	r2, [r4, #16]
 80019d4:	b942      	cbnz	r2, 80019e8 <__swsetup_r+0xa4>
 80019d6:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80019da:	d1c5      	bne.n	8001968 <__swsetup_r+0x24>
 80019dc:	bd38      	pop	{r3, r4, r5, pc}
 80019de:	0799      	lsls	r1, r3, #30
 80019e0:	bf58      	it	pl
 80019e2:	6962      	ldrpl	r2, [r4, #20]
 80019e4:	60a2      	str	r2, [r4, #8]
 80019e6:	e7f4      	b.n	80019d2 <__swsetup_r+0x8e>
 80019e8:	2000      	movs	r0, #0
 80019ea:	e7f7      	b.n	80019dc <__swsetup_r+0x98>
 80019ec:	2000000c 	.word	0x2000000c

080019f0 <_sbrk_r>:
 80019f0:	b538      	push	{r3, r4, r5, lr}
 80019f2:	4d06      	ldr	r5, [pc, #24]	@ (8001a0c <_sbrk_r+0x1c>)
 80019f4:	2300      	movs	r3, #0
 80019f6:	4604      	mov	r4, r0
 80019f8:	4608      	mov	r0, r1
 80019fa:	602b      	str	r3, [r5, #0]
 80019fc:	f7ff f866 	bl	8000acc <_sbrk>
 8001a00:	1c43      	adds	r3, r0, #1
 8001a02:	d102      	bne.n	8001a0a <_sbrk_r+0x1a>
 8001a04:	682b      	ldr	r3, [r5, #0]
 8001a06:	b103      	cbz	r3, 8001a0a <_sbrk_r+0x1a>
 8001a08:	6023      	str	r3, [r4, #0]
 8001a0a:	bd38      	pop	{r3, r4, r5, pc}
 8001a0c:	200001c0 	.word	0x200001c0

08001a10 <__swhatbuf_r>:
 8001a10:	b570      	push	{r4, r5, r6, lr}
 8001a12:	460c      	mov	r4, r1
 8001a14:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001a18:	2900      	cmp	r1, #0
 8001a1a:	b096      	sub	sp, #88	@ 0x58
 8001a1c:	4615      	mov	r5, r2
 8001a1e:	461e      	mov	r6, r3
 8001a20:	da0d      	bge.n	8001a3e <__swhatbuf_r+0x2e>
 8001a22:	89a3      	ldrh	r3, [r4, #12]
 8001a24:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8001a28:	f04f 0100 	mov.w	r1, #0
 8001a2c:	bf14      	ite	ne
 8001a2e:	2340      	movne	r3, #64	@ 0x40
 8001a30:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8001a34:	2000      	movs	r0, #0
 8001a36:	6031      	str	r1, [r6, #0]
 8001a38:	602b      	str	r3, [r5, #0]
 8001a3a:	b016      	add	sp, #88	@ 0x58
 8001a3c:	bd70      	pop	{r4, r5, r6, pc}
 8001a3e:	466a      	mov	r2, sp
 8001a40:	f000 f848 	bl	8001ad4 <_fstat_r>
 8001a44:	2800      	cmp	r0, #0
 8001a46:	dbec      	blt.n	8001a22 <__swhatbuf_r+0x12>
 8001a48:	9901      	ldr	r1, [sp, #4]
 8001a4a:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8001a4e:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8001a52:	4259      	negs	r1, r3
 8001a54:	4159      	adcs	r1, r3
 8001a56:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001a5a:	e7eb      	b.n	8001a34 <__swhatbuf_r+0x24>

08001a5c <__smakebuf_r>:
 8001a5c:	898b      	ldrh	r3, [r1, #12]
 8001a5e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001a60:	079d      	lsls	r5, r3, #30
 8001a62:	4606      	mov	r6, r0
 8001a64:	460c      	mov	r4, r1
 8001a66:	d507      	bpl.n	8001a78 <__smakebuf_r+0x1c>
 8001a68:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8001a6c:	6023      	str	r3, [r4, #0]
 8001a6e:	6123      	str	r3, [r4, #16]
 8001a70:	2301      	movs	r3, #1
 8001a72:	6163      	str	r3, [r4, #20]
 8001a74:	b003      	add	sp, #12
 8001a76:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001a78:	ab01      	add	r3, sp, #4
 8001a7a:	466a      	mov	r2, sp
 8001a7c:	f7ff ffc8 	bl	8001a10 <__swhatbuf_r>
 8001a80:	9f00      	ldr	r7, [sp, #0]
 8001a82:	4605      	mov	r5, r0
 8001a84:	4639      	mov	r1, r7
 8001a86:	4630      	mov	r0, r6
 8001a88:	f7ff fb16 	bl	80010b8 <_malloc_r>
 8001a8c:	b948      	cbnz	r0, 8001aa2 <__smakebuf_r+0x46>
 8001a8e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001a92:	059a      	lsls	r2, r3, #22
 8001a94:	d4ee      	bmi.n	8001a74 <__smakebuf_r+0x18>
 8001a96:	f023 0303 	bic.w	r3, r3, #3
 8001a9a:	f043 0302 	orr.w	r3, r3, #2
 8001a9e:	81a3      	strh	r3, [r4, #12]
 8001aa0:	e7e2      	b.n	8001a68 <__smakebuf_r+0xc>
 8001aa2:	89a3      	ldrh	r3, [r4, #12]
 8001aa4:	6020      	str	r0, [r4, #0]
 8001aa6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001aaa:	81a3      	strh	r3, [r4, #12]
 8001aac:	9b01      	ldr	r3, [sp, #4]
 8001aae:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8001ab2:	b15b      	cbz	r3, 8001acc <__smakebuf_r+0x70>
 8001ab4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001ab8:	4630      	mov	r0, r6
 8001aba:	f000 f81d 	bl	8001af8 <_isatty_r>
 8001abe:	b128      	cbz	r0, 8001acc <__smakebuf_r+0x70>
 8001ac0:	89a3      	ldrh	r3, [r4, #12]
 8001ac2:	f023 0303 	bic.w	r3, r3, #3
 8001ac6:	f043 0301 	orr.w	r3, r3, #1
 8001aca:	81a3      	strh	r3, [r4, #12]
 8001acc:	89a3      	ldrh	r3, [r4, #12]
 8001ace:	431d      	orrs	r5, r3
 8001ad0:	81a5      	strh	r5, [r4, #12]
 8001ad2:	e7cf      	b.n	8001a74 <__smakebuf_r+0x18>

08001ad4 <_fstat_r>:
 8001ad4:	b538      	push	{r3, r4, r5, lr}
 8001ad6:	4d07      	ldr	r5, [pc, #28]	@ (8001af4 <_fstat_r+0x20>)
 8001ad8:	2300      	movs	r3, #0
 8001ada:	4604      	mov	r4, r0
 8001adc:	4608      	mov	r0, r1
 8001ade:	4611      	mov	r1, r2
 8001ae0:	602b      	str	r3, [r5, #0]
 8001ae2:	f7fe ffca 	bl	8000a7a <_fstat>
 8001ae6:	1c43      	adds	r3, r0, #1
 8001ae8:	d102      	bne.n	8001af0 <_fstat_r+0x1c>
 8001aea:	682b      	ldr	r3, [r5, #0]
 8001aec:	b103      	cbz	r3, 8001af0 <_fstat_r+0x1c>
 8001aee:	6023      	str	r3, [r4, #0]
 8001af0:	bd38      	pop	{r3, r4, r5, pc}
 8001af2:	bf00      	nop
 8001af4:	200001c0 	.word	0x200001c0

08001af8 <_isatty_r>:
 8001af8:	b538      	push	{r3, r4, r5, lr}
 8001afa:	4d06      	ldr	r5, [pc, #24]	@ (8001b14 <_isatty_r+0x1c>)
 8001afc:	2300      	movs	r3, #0
 8001afe:	4604      	mov	r4, r0
 8001b00:	4608      	mov	r0, r1
 8001b02:	602b      	str	r3, [r5, #0]
 8001b04:	f7fe ffc9 	bl	8000a9a <_isatty>
 8001b08:	1c43      	adds	r3, r0, #1
 8001b0a:	d102      	bne.n	8001b12 <_isatty_r+0x1a>
 8001b0c:	682b      	ldr	r3, [r5, #0]
 8001b0e:	b103      	cbz	r3, 8001b12 <_isatty_r+0x1a>
 8001b10:	6023      	str	r3, [r4, #0]
 8001b12:	bd38      	pop	{r3, r4, r5, pc}
 8001b14:	200001c0 	.word	0x200001c0

08001b18 <_init>:
 8001b18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001b1a:	bf00      	nop
 8001b1c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001b1e:	bc08      	pop	{r3}
 8001b20:	469e      	mov	lr, r3
 8001b22:	4770      	bx	lr

08001b24 <_fini>:
 8001b24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001b26:	bf00      	nop
 8001b28:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001b2a:	bc08      	pop	{r3}
 8001b2c:	469e      	mov	lr, r3
 8001b2e:	4770      	bx	lr
